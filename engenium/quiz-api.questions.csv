_id,options[0],options[1],options[2],options[3],category,question,answer,__v
66a52bab397abc57d02c5e77,Hardware,Software,Linguagem,Design,Processo de Software,Um processo de software é um conjunto de atividades relacionadas que levam à produção de um produto de:,Software,0
66a5414398ac1c5a28a56ef6,especificação de software,projeto e implementação de software,validação de software,evolução de software,Processo de Software,"A funcionalidade do software e as restrições a seu funcionamento devem ser definidos, este é o papel fundamental da(o): ",especificação de software,0
66a550b3a382c152ac92b449,Para produzir softwares complexos,Para produzir softwares de longo prazo,Para produzir softwares úteis rapidamente,Para produzir softwares em grandes volumes,Desenvolvimento Ágil,Como os processos de desenvolvimento ágeis de software são concebidos?,Para produzir softwares úteis rapidamente,0
66a5608c27fd1b5fd8cf4171,Minimizar o envolvimento dos stakeholders,Adotar uma abordagem iterativa e incremental,Eliminar a fase de teste,Acelerar o processo de codificação,Processo de Software,Qual é o objetivo fundamental do RUP no desenvolvimento de software?,Adotar uma abordagem iterativa e incremental,0
66a560c927fd1b5fd8cf4174,"Análise, Design, Implementação e Teste","Concepção, Elaboração, Construção e Transição.","Planejamento, Execução, Monitoramento e Controle","Concepção, Desenvolvimento, Implementação e Manutenção",Processo de Software,Quais são as fases principais do RUP?,"Concepção, Elaboração, Construção e Transição.",0
66a5614227fd1b5fd8cf4178,Recursos Unificados de Programação,Rational Unified Project,Rational Unified Process,Processo Unificado Racional,Processo de Software,O que significa a sigla RUP?,Rational Unified Process,0
66a5622a27fd1b5fd8cf417d,Integração de componentes para criar um sistema completo.,Teste dos componentes pelos desenvolvedores.,Teste com dados fornecidos pelo cliente.,Simulação de dados.,Processo de Software,Qual é a ênfase do Teste de Aceitação no processo de desenvolvimento de software?,Teste com dados fornecidos pelo cliente.,0
66a5635a27fd1b5fd8cf4189,Integração de componentes para criar um sistema completo.,Teste dos componentes pelos desenvolvedores.,Teste com dados fornecidos pelo cliente.,Simulação de dados.,Processo de Software,Qual é a característica principal do Teste de Desenvolvimento no processo de desenvolvimento de software?,Teste dos componentes pelos desenvolvedores.,0
66a5642127fd1b5fd8cf418c,Garantir que o software atenda apenas às suas especificações.,"Mostrar que o software se adequa às especificações, mas não necessariamente satisfaz as especificações do cliente.",Garantir que o software se adeque às suas especificações e satisfaça as especificações do cliente.,Demonstrar que as especificações do cliente são irrelevantes para o software.,Processo de Software,Qual é o propósito da validação de software?,Garantir que o software se adeque às suas especificações e satisfaça as especificações do cliente.,0
66a5643b27fd1b5fd8cf418e,Projetar o funcionamento de cada componente do sistema,Identificar a estrutura geral do sistema,Definir as interfaces entre os componentes do sistema,Projetar as estruturas de dados do sistema e sua representação em um banco de dados,Processo de Software,Qual é o foco do projeto de banco de dados no desenvolvimento de software?,Projetar as estruturas de dados do sistema e sua representação em um banco de dados,0
66a5668e27fd1b5fd8cf4194,especificação de software,projeto e implementação de software,validação de software,evolução de software,Processo de Software,"O software deve ser produzido para atender as especificações, este é o papel fundamental da(o):",projeto e implementação de software,0
66a566ac27fd1b5fd8cf4196,especificação de software,projeto e implementação de software,validação de software,evolução de software,Processo de Software,"O software deve ser validado para garantir que atenda às demandas do cliente, este é o papel fundamental da(o):",validação de software,0
66a566c927fd1b5fd8cf4198,especificação de software,projeto e implementação de software,validação de software,evolução de software,Processo de Software,"O software deve evoluir para atender às necessidades de mudança dos clientes, este é o papel fundamental da(o):",evolução de software,0
66a5677c27fd1b5fd8cf419c,Falso,Verdadeiro,,,Processo de Software,"Julgue a frase como verdadeira ou falsa: “Existe um processo ideal, a maioria das organizações não precisam desenvolver os próprios processos de desenvolvimento de software”.",Falso,0
66a7f9fb38b1093974273da2,Falso,Verdadeiro,,,Processo de Software,“Um modelo de software é uma representação simplificada de um processo de software”. Determine se a frase é verdadeira ou falsa:,Verdadeiro,0
66a7fa1f38b1093974273da4,Flexibilidade extrema durante todo o ciclo de desenvolvimento,A capacidade de adaptar-se facilmente a mudanças de requisitos.,"Uma abordagem sequencial e linear, com fases bem definidas.",A priorização da entrega contínua de incrementos de software.,Processo de Software,Qual é uma característica central do modelo cascata na engenharia de software?,Letra C,0
66a7fa4538b1093974273da6,Implementação de todas as funcionalidades de uma vez,Abordagem linear e sequencial para o desenvolvimento,Entrega contínua de incrementos de software ao longo do tempo, Ênfase na documentação extensiva desde o início do projeto,Processo de Software,Qual é uma característica chave do modelo de desenvolvimento incremental na engenharia de software?,Letra C,0
66a7fa7838b1093974273da8,Reutilização de componentes de software existentes sempre que possível,Ênfase na criação de soluções específicas para cada problema,Desenvolvimento de software a partir do zero em cada projeto,Utilização exclusiva de metodologias ágeis para o desenvolvimento de software,Processo de Software,Qual é uma característica fundamental da engenharia de software orientada a reúso?,Letra A,0
66a7fa9738b1093974273daa, Análise e Definição de Requisitos,Implementação e teste unitário,Diagrama UML,Projeto de Sistema e Software,Processo de Software,"No modelo cascata, os serviços, restrições e metas do sistema são estabelecidos por meio de consulta aos usuários. Em seguida, eles são definidos em detalhes e funcionam como uma especificação do sistema. Este estágio é conhecido como:",Letra A,0
66a7fad738b1093974273dac,Análise e Definição de Requisitos,Diagrama UML,Projeto de Sistema e Software,Implementação e teste unitário,Processo de Software," No modelo cascata, o processo de projeto de sistemas aloca os requisitos tanto para sistemas de hardware como para sistemas de software, por meio da definição de uma arquitetura geral do sistema. Este estágio é conhecido como:",Letra D,0
66a7fb1f38b1093974273dae,Análise e Definição de Requisitos,Implementação e teste unitário,Diagrama UML,Projeto de Sistema e Software,Processo de Software,"No modelo cascata, o projeto de software é desenvolvido como um conjunto de programas ou unidades de programa. O teste unitário envolve a verificação de que cada unidade atenda a sua especificação. Este estágio é conhecido como:",Letra B,0
66a7fb3738b1093974273db0,Análise e Definição de Requisitos,Implementação e teste unitário,Integração e teste de sistema,Projeto de Sistema e Software,Processo de Software," No modelo cascata, as unidades individuais do programa ou programas são integradas e testadas como um sistema completo para assegurar que os requisitos do software tenham sido atendidos. Este estágio é conhecido como:",Letra C,0
66a7fb6038b1093974273db2,Análise e Definição de Requisitos,Implementação e teste unitário,Diagrama UML,Operação e Manutenção,Processo de Software," No modelo cascata, este estágio envolve a correção de erros que não foram descobertos em estágios iniciais do ciclo de vida, com melhora da implementação das unidades do sistema e ampliação de seus serviços. Este estágio é conhecido como:",Letra D,0
66a7fb9f38b1093974273db4,Desenvolvimento Incremental,Modelo Cascata,Modelo Espiral,Modelo RAD (Rapid Application Development),Processo de Software,"O desenvolvimento baseado na ideia de desenvolver uma implementação inicial, expô-la aos comentários dos usuários e continuar por meio da criação de várias versões até que um sistema adequado seja desenvolvido é conhecido como:",Letra A,0
66a7fc1038b1093974273dbd,É mais fácil obter feedback dos clientes sobre o desenvolvimento que foi feito.,É possível obter entrega e implementação rápida de um software útil ao cliente., O custo de acomodar as mudanças nos requisitos do cliente é reduzido.,Maior previsibilidade e controle sobre o processo de desenvolvimento.,Processo de Software, Qual dessas alternativas não é uma vantagem do desenvolvimento incremental:,Letra D,0
66a7fc5f38b1093974273dc1,Verificação de requisitos,Design arquitetônico,Análise de riscos,Análise de componentes,Processo de Software,"Qual é a etapa do processo de análise de componentes na engenharia de software, onde, após a especificação de requisitos, ocorre uma busca por componentes adequados para implementar essa especificação?",Letra D,0
66a7fc7b38b1093974273dc3,Análise de componentes,Verificação de requisitos,Design detalhado,Modelagem de requisitos,Processo de Software,"Qual é o estágio do processo de modificação de requisitos na engenharia de software, onde os requisitos são analisados com base nas informações Processo de Software 6 sobre os componentes descobertos, e então são ajustados para refletir os componentes disponíveis?",Letra D,0
66a7fc9c38b1093974273dc5,Análise de requisitos,Projeto do sistema com reúso,Implementação do sistema,Teste do sistema,Processo de Software,Durante qual estágio do processo de desenvolvimento de software o framework do sistema é projetado ou algo existente é reusado?,Letra B,0
66a7fcbb38b1093974273dc7,Análise de requisitos,Projeto detalhado,Desenvolvimento e integração,Teste do sistema,Processo de Software," Qual estágio do processo de desenvolvimento de software envolve o desenvolvimento de software para componentes que não podem ser adquiridos externamente, enquanto os sistemas COTS (Commercial OffThe-Shelf) são integrados para criar o novo sistema?",Letra C,0
66a7fcda38b1093974273dc9,Serviços Web,Protocolo SOAP,RESTful APIs,Microservices,Processo de Software,Qual é o termo usado para descrever os web services que são desenvolvidos de acordo com padrões de serviço e estão disponíveis para invocação remota?,Letra A,0
66a7fcf438b1093974273dcb,Bibliotecas de código,Componentes de software,Frameworks de desenvolvimento,Arquiteturas orientadas a serviço (SOA),Processo de Software,"Qual é o termo utilizado para descrever coleções de objetos que são desenvolvidos como um pacote para serem integrados com um framework de componentes, como .NET ou J2EE?",Letra B,0
66a8002f38b1093974273dda,Verdadeiro,Falso,,,Processo de Software,"Julgue a frase: “Os problemas do desenvolvimento incremental são particularmente críticas para os sistemas de vida-longa, grandes e complexos, nos quais várias equipes desenvolvem diferentes partes do sistema”.",Letra A,0
66a802b038b1093974273de9,Online, Stand-alone,Open-source,Cloud-based,Processo de Software, Qual é a principal característica dos sistemas de software configurados para uso em um ambiente particular?,Letra B,0
66a802c038b1093974273deb,Verdadeiro,Falso,,,Processo de Software,"Os processos reais de software são intercalados com sequências de atividades técnicas, de colaboração e de gerência, com o intuito de especificar, projetar, implementar e testar um sistema de software, essa afirmação é:",Letra A,0
66a802d738b1093974273ded, Em paralelo,De maneira iterativa,Em sequência,Aleatoriamente,Processo de Software,"No modelo em cascata, como são organizadas as quatro atividades básicas do processo: especificação, desenvolvimento, validação e evolução?",Letra C,0
66a8033a38b1093974273def,São intercaladas,São de maneira iterativa,São em sequência,São aleatorias,Processo de Software,Qual é a característica principal do desenvolvimento incremental em relação à organização das atividades básicas do processo?,Letra A,0
66a8035a38b1093974273df1,Em documentos extensos,Por meio de diagramas UML,Em cartões,Em linguagem de programação,Processo de Software,"No contexto do desenvolvimento de software, como são feitas as especificações no extreme programming (XP)?",Letra C,0
66a8037c38b1093974273df3,Realizado após a implementação do programa,Executado por uma equipe separada,Desenvolvido antes do próprio programa,Conduzido apenas no final do projeto,Processo de Software,Qual é uma característica do teste no extreme programming?,Letra C,0
66a803a538b1093974273df5,Desenvolvimento do sistema,Compreensão e definição dos serviços requisitados,Operação do sistema,Implementação do sistema,Processo de Software,Qual é o principal objetivo da especificação de software ou engenharia de requisitos?,Letra B,0
66a803bb38b1093974273df7,Por ser a última fase do desenvolvimento,Por não ter impacto no projeto,Por gerar problemas na implementação em caso de erros,Por ser uma etapa opcional,Processo de Software,Por que a engenharia de requisitos é considerada um estágio particularmente crítico no processo de software?,Letra C,0
66a803e738b1093974273df9,Apenas a implementação do sistema,Compreensão e definição dos serviços requisitados e identificação de restrições,Apenas a operação do sistema,Apenas a definição de restrições,Processo de Software,O que envolve o processo de especificação de software?,Letra B,0
66a8040838b1093974273dfb,Erros na engenharia de requisitos não têm impacto no projeto e na implementação,Erros na engenharia de requisitos geram impacto apenas no projeto,Erros na engenharia de requisitos geram impacto apenas na implementação,Erros na engenharia de requisitos inevitavelmente geram problemas no projeto e na implementação do sistema,Processo de Software,Qual é a relação entre erros na engenharia de requisitos e o impacto no projeto e na implementação do sistema?,Letra D,0
66a8042a38b1093974273dfd,Viabilidade do projeto,"Realismo, consistência e completude dos requisitos",Estimativa de tempo e custo,Tecnologias atuais de software e hardware,Processo de Software,O que é verificado durante a atividade de validação de requisitos?,Letra B,0
66a8044a38b1093974273dff, Como descrições detalhadas da funcionalidade a ser provida,Como observações dos sistemas existentes, Como declarações abstratas dos requisitos do sistema para o cliente e usuário final,Como verificações de possibilidade de satisfazer as necessidades do usuário,Processo de Software,Como os requisitos do usuário são definidos no processo de especificação de requisitos?,Letra C,0
66a8046738b1093974273e01,Derivar requisitos do sistema,Verificar a viabilidade do projeto,Traduzir as informações obtidas durante a análise em um documento,"Validar os requisitos quanto a realismo, consistência e completude",Processo de Software,Qual é o objetivo da especificação de requisitos no desenvolvimento de software?,Letra C,0
66a8048338b1093974273e03,Tradução das informações obtidas em documentos de requisitos,Observação dos sistemas existentes e discussões com potenciais usuários,"Verificação de requisitos quanto a realismo, consistência e completude",Validação dos requisitos do sistema para o cliente,Processo de Software,O que envolve a eliciação e análise de requisitos no processo de desenvolvimento de software?,Letra B,0
66a8049e38b1093974273e05,Verificação da viabilidade do projeto, Conversão de uma especificação do sistema, Elicitação de requisitos,Validação dos requisitos do sistema,Processo de Software,O que envolve o estágio de implementação no processo de desenvolvimento de software?,Letra B,0
66a804c338b1093974273e07,Definir as interfaces entre os componentes do sistema,Projetar as estruturas de dados do sistema,Identificar a estrutura geral do sistema e seus componentes principais,Projetar o funcionamento de cada componente do sistema,Processo de Software,Qual é o principal objetivo do projeto de arquitetura no desenvolvimento de software?,Letra C,0
66a804e238b1093974273e09,Estrutura geral do sistema,Funcionamento de cada componente do sistema,Interfaces entre os componentes do sistema,Estruturas de dados do sistema,Processo de Software,O que é definido no projeto de interface no desenvolvimento de software?,Letra C,0
66a8052c38b1093974273e0b, Identificação da estrutura geral do sistema, Definição das interfaces entre os componentes do sistema, Projeto do funcionamento de cada componente do sistema,Projetar as estruturas de dados do sistema,Processo de Software,O que é realizado no projeto de componente durante o desenvolvimento de software?,Letra D,0
66a8054a38b1093974273e0d, Projetar o funcionamento de cada componente do sistema,Identificar a estrutura geral do sistema, Definir as interfaces entre os componentes do sistema, Projetar as estruturas de dados do sistema e sua representação em um banco de dados,Processo de Software,Qual é o foco do projeto de banco de dados no desenvolvimento de software?,Letra D,0
66a8056938b1093974273e0f,Garantir que o software atenda apenas às suas especificações.,"Mostrar que o software se adequa às especificações, mas não necessariamente satisfaz as especificações do cliente.", Garantir que o software se adeque às suas especificações e satisfaça as especificações do cliente.,Demonstrar que as especificações do cliente são irrelevantes para o software.,Processo de Software,Qual é o propósito da validação de software?,Letra C,0
66a8071138b1093974273e1c,Integração de componentes para criar um sistema completo.,Teste dos componentes pelos desenvolvedores., Teste com dados fornecidos pelo cliente.,Simulação de dados.,Processo de Software,Qual é a característica principal do Teste de Desenvolvimento no processo de desenvolvimento de software?,Letra B,0
66a8072c38b1093974273e1e, Integração de componentes para criar um sistema completo.,Teste dos componentes pelos desenvolvedores,Teste com dados fornecidos pelo cliente.,Simulação de dados.,Processo de Software,O que é realizado durante o Teste do Sistema no desenvolvimento de software?,Letra A,0
66a8074a38b1093974273e20,Integração de componentes para criar um sistema completo.,Teste dos componentes pelos desenvolvedores.,Teste com dados fornecidos pelo cliente.,Simulação de dados.,Processo de Software,Qual é a ênfase do Teste de Aceitação no processo de desenvolvimento de software?,Letra C,0
66a807e638b1093974273e23,Para produzir softwares complexos,Para produzir softwares de longo prazo,Para produzir softwares úteis rapidamente,Para produzir softwares em grandes volumes,Desenvolvimento Ágil,Como os processos de desenvolvimento ágeis de software são concebidos?,Letra C,0
66a8080038b1093974273e25,Desenvolver o software como uma única unidade,Desenvolver o software como uma série de incrementos,Desenvolver o software em fases separadas, Desenvolver o software em grandes ciclos,Desenvolvimento Ágil,Qual é a abordagem em relação ao desenvolvimento de software nos processos ágeis?,Letra B,0
66a8082038b1093974273e27,São realizados de forma sequencial,São intercalados,São automatizados,São ignorados,Desenvolvimento Ágil," Como os processos de especificação, projeto e implementação são abordados no desenvolvimento ágil?",Letra B,0
66a8083938b1093974273e29,Em uma única versão, Em grandes ciclos,Em uma série de versões,Em fases separadas,Processo de Software, Como o desenvolvimento do sistema é realizado no desenvolvimento ágil?,Letra C,0
66a8085638b1093974273e2b,Não são envolvidos, Envolvidos apenas no início do projeto, Envolvidos apenas no final do projeto, Envolvidos na especificação e avaliação de cada versão,Processo de Software,Como os usuários finais e outros stakeholders são envolvidos durante o desenvolvimento do sistema?,Letra C,0
66a8087138b1093974273e2d,Por meio de uma abordagem de desenvolvimento tradicional,Usando uma linguagem de programação específica,Utilizando um sistema interativo de desenvolvimento, Ignorando completamente o design de interface,Desenvolvimento Ágil,Como são desenvolvidas as interfaces de usuários neste método?,Letra C,0
66a8088b38b1093974273e2f, Envolvimento do Cliente, Entrega Incremental,Pessoas e Não Processos,Manter a Simplicidade,Desenvolvimento Ágil,Qual é um dos princípios dos métodos ágeis que destaca a importância de manter a simplicidade no desenvolvimento de software?,Letra D,0
66a808ad38b1093974273e31,A ênfase deve estar em seguir processos rigorosos,A comunicação eficaz e a colaboração são mais importantes do que processos rígidos,As pessoas não são essenciais para o sucesso do projeto,Os processos devem ser priorizados em relação às pessoas,Desenvolvimento Ágil,"O princípio ""Pessoas e Não Processos"" dos métodos ágeis sugere que:",Letra B,0
66a808cd38b1093974273e33,Manter a Simplicidade, Pessoas e Não Processos,Entrega Incremental,Envolvimento do Cliente,Desenvolvimento Ágil,Como é chamado o princípio que promove a interação contínua e colaborativa entre a equipe de desenvolvimento e o cliente?,Letra D,0
66a808ea38b1093974273e35,Como documentos detalhados,Como diagramas UML,"Como cenários, chamados de estórias do usuário",Como especificações técnicas,Processo de Software,Como os requisitos são expressos em Extreme Programming (XP)?,Letra C,0
66a8090238b1093974273e37, Desenvolvem testes após escreverem o código,Desenvolvem testes antes de escreverem o código, Não desenvolvem testes,Delegam o desenvolvimento de testes a uma equipe separada,Desenvolvimento Ágil,O que os programadores em XP fazem em relação ao desenvolvimento de testes?,Letra B,0
66a8091a38b1093974273e39,Programadores trabalham individualmente,Todo o código produzido por um time deve ser produzido em duplas.,Programadores não interagem entre si,Programadores trabalham em equipes separadas,Desenvolvimento Ágil,O que significa trabalhar em pares em XP?,Letra B,0
66a8093638b1093974273e3b,Em documentos detalhados,Gravados em cartões de estória,Determinados aleatoriamente,Priorizados pelo cliente,Desenvolvimento Ágil,Como os requisitos são gerenciados no planejamento incremental?,Letra B,0
66a8095138b1093974273e3d,Desenvolvimento de funcionalidades complexas,Adição gradual de funcionalidades ao longo do tempo, Lançamento único e abrangente,Desenvolvimento baseado em grandes marcos,Desenvolvimento Ágil,O que caracteriza os pequenos releases no contexto do desenvolvimento de software?,Letra B,0
66a8097938b1093974273e3f,Desenvolvimento apenas para atender às necessidades atuais,Desenvolvimento para atender às necessidades futuras,Desenvolvimento baseado em documentos extensos,Desenvolvimento orientado por grandes metas,Desenvolvimento Ágil,Como é caracterizado um projeto simples no contexto do planejamento incremental?,Letra A,0
66a809a838b1093974273e41,Desenvolver o código antes de criar testes,Criar testes apenas após a implementação do código,Usar um framework de teste inicial automatizado para criar testes antes da implementação,Ignorar completamente a fase de testes,Desenvolvimento Ágil,". O que significa a prática ""test-first"" em relação ao desenvolvimento de software?",Letra C,0
66a809c538b1093974273e43,Refatoração é evitada para manter a complexidade do código,Apenas alguns desenvolvedores são responsáveis pela refatoração,Todos os desenvolvedores devem refatorar continuamente em busca de melhorias no código,Refatoração é realizada apenas no final do projeto,Desenvolvimento Ágil,Como é abordada a refatoração no contexto do desenvolvimento?,Letra C,0
66a809df38b1093974273e45,Cada desenvolvedor é responsável por uma área específica do sistema,Pares de desenvolvedores trabalham em áreas isoladas do sistema,Todos os conhecimentos e desenvolvedores assumem responsabilidade por todo o código, A responsabilidade pelo código é exclusiva do líder do projeto,Desenvolvimento Ágil,O que significa propriedade coletiva em XP?,Letra C,0
66a809f938b1093974273e47, A integração é realizada apenas no final do projeto,Apenas algumas partes específicas do código são integradas,"Assim que uma tarefa é concluída, ela é integrada ao sistema como um todo",A integração é realizada apenas em grandes marcos do projeto,Desenvolvimento Ágil,Como é caracterizada a integração contínua em XP?,Letra C,0
66a80a2338b1093974273e49,Horas extras são encorajadas para acelerar o desenvolvimento,Grandes quantidades de horas extras são consideradas aceitáveis, Evitar grandes quantidades de horas extras para manter a qualidade do código,Aumentar a produtividade a curto prazo,Desenvolvimento Ágil,Qual é a ênfase da prática de ritmo sustentável em XP?,Letra C,0
66a80a3f38b1093974273e4b,O cliente é excluído do processo de desenvolvimento,O cliente deve estar disponível ocasionalmente,Um representante do usuário final (cliente) está disponível todo o tempo para a equipe de XP,O cliente só aparece no final do projeto para aprovar o resultado final,Desenvolvimento Ágil,"O que significa ""cliente no local"" em XP?",Letra C,0
66a80a5c38b1093974273e4d,Rígido,Ágil,Tradicional,Desatualizado,Desenvolvimento Ágil,A abordagem Scrum é um método:,Letra B,0
66a80a7f38b1093974273e4f,Gerenciamento de projetos longos,Desenvolvimento rápido e contínuo,Planejamento detalhado inicial,Estrutura hierárquica rígida,Desenvolvimento Ágil,O foco do Scrum está no:,Letra B,0
66a80aa638b1093974273e51,Kanban,Waterfall,Extreme Programming (XP),Método Cascata,Desenvolvimento Ágil,"Scrum pode ser usado com abordagens ágeis mais técnicas, como:",Letra C,0
66a80ac838b1093974273e53,Flexível e adaptável,Rígido e inflexível,Baseado em planejamento detalhado,Estático e não iterativo,Desenvolvimento Ágil,Scrum fornece um framework de gerenciamento de projetos que é:,Letra A,0
66a80adb38b1093974273e55,Verdadeiro,Falso,,,Desenvolvimento Ágil,Julgue como verdadeiro ou falso a seguinte afirmação: “Scrum é exclusivamente focado em abordagens técnicas específicas da engenharia de software”.,Letra B,0
66a80b3438b1093974273e57,"Os sprints variam em duração, dependendo da necessidade do cliente.","Os sprints têm um comprimento fixo, geralmente entre duas a quatro semanas.",Os sprints são apenas uma fase inicial de planejamento no Scrum.,Os sprints são exclusivamente dedicados ao desenvolvimento de um release do sistema.,Desenvolvimento Ágil,"Sobre a característica dos sprints no Scrum, qual das seguintes afirmações está correta?",Letra B,0
66a80b4c38b1093974273e59, O backlog do sprint.,O backlog do produto.,O backlog do projeto.,O backlog do cliente.,Desenvolvimento Ágil,Qual é o ponto de partida para o planejamento no Scrum?,Letra B,0
66a80b6638b1093974273e5b,Desenvolvimento do software.,Identificação de riscos.,Seleção de recursos e funcionalidades,Realização de reuniões diárias.,Desenvolvimento Ágil,"Durante a fase de seleção no Scrum, o que a equipe do projeto faz em colaboração com o cliente?",Letra C,0
66a80b7e38b1093974273e5d,É ocultado dos stakeholders.,É revisado e apresentado aos stakeholders.,É repriorizado pelo Scrum Master,É deixado sem conclusão.,Desenvolvimento Ágil,"Ao final de um sprint no Scrum, o que acontece com o trabalho desenvolvido?",Letra B,0
66a80b9c38b1093974273e5f,Controlar o desenvolvimento do software,Tomar todas as decisões importantes.,Facilitar reuniões diárias e controlar o backlog de trabalho., Ignorar a comunicação com os clientes e a gerência externa à equipe.,Desenvolvimento Ágil,Qual é o papel do Scrum Master?,Letra C,0
66a80bbd38b1093974273e61,Porque o Scrum Master assume todas as responsabilidades do gerente de projeto.,Para enfatizar a distribuição de poder de decisão para toda a equipe,Porque o gerente de projeto não tem importância no desenvolvimento ágil de software.,") Porque o Scrum Master é apenas um membro da equipe, sem funções específicas.",Desenvolvimento Ágil,"Por que o termo ""gerente de projeto"" é evitado no Scrum? ",Letra B,0
66a80bd938b1093974273e63,Desenvolver o software e fazer comunicação externa.,Registrar decisões e controlar o backlog de trabalho., Evitar reuniões diárias e tomar todas as decisões importantes.,Delegar responsabilidades para outros membros da equipe.,Desenvolvimento Ágil,Quais são algumas das responsabilidades do Scrum Master?,Letra B,0
66a80bf838b1093974273e65,"Desenvolvimento incremental, releases frequentes, redução de overheads de processos e produção de códigos de baixa qualidade.","Desenvolvimento em larga escala, poucas iterações, documentação extensiva e baixa interação com o cliente","Desenvolvimento rápido, releases frequentes, foco em testes automatizados e envolvimento direto do cliente.","Desenvolvimento sequencial, releases espaçados, alta burocracia e envolvimento limitado do cliente.",Desenvolvimento Ágil, Quais são algumas características dos métodos ágeis?,Letra C,0
66a80c1538b1093974273e67,Integração de processos burocráticos.,Redução na qualidade do código.,Desenvolvimento de testes automatizados antes da implementação de um recurso,Envolvimento limitado do cliente na equipe de desenvolvimento,Desenvolvimento Ágil,Extreme Programming (XP) é um método ágil que se destaca por,Letra C,0
66a80c2638b1093974273e69, Um modelo de desenvolvimento sem iterações definidas.,"Um modelo centralizado em torno de sprints, períodos de tempo para o desenvolvimento de um incremento de sistema.", Um modelo sem planejamento prévio.,Um modelo sem qualquer forma de gerenciamento de projetos.,Desenvolvimento Ágil,Qual das afirmações define o método Scrum?,Letra B,0
66a80c5838b1093974273e6b,Facilita o desenvolvimento de código sem revisões.,Facilita o desenvolvimento de código sem propriedade coletiva.,Permite que outros membros da equipe se beneficiem imediatamente da refatoração.,Dificulta a colaboração entre os membros da equipe.,Desenvolvimento Ágil,Como a prática de programação em pares apoia a refatoração de código?,Letra C,0
66a80c6938b1093974273e6d,Aumenta a competição entre os programadores.,Aumenta o tempo necessário para revisão de código.,Apoia a ideia de propriedade e responsabilidade coletiva para o sistema.,Diminui a interação entre os membros da equipe de desenvolvimento,Desenvolvimento Ágil,Qual é uma das vantagens da prática de programação em pares no Extreme Programming (XP)?,Letra C,0
66a80c7d38b1093974273e6f, Quando se trabalha com uma equipe altamente distribuída.,Quando se desenvolve um sistema com regulamentação externa.,Quando se espera um tempo de vida longo para o sistema.,Quando se requer uma análise detalhada antes da implementação.,Desenvolvimento Ágil,Em que circunstância uma abordagem ágil pode ser preferível?,Letra A,0
66a80c8f38b1093974273e71,Documentação extensiva e especificação detalhada do sistema.,Implementação do sistema como uma única unidade.,"Intercalação dos processos de especificação, projeto e implementação.",Envolvimento dos clientes apenas no final do processo de desenvolvimento.,Desenvolvimento Ágil,Quais são algumas das características fundamentais dos processos de desenvolvimento rápido de software?,Letra C,0
66a80ca138b1093974273e73,Implementação de grandes incrementos do sistema a cada seis meses., Minimização do envolvimento dos clientes no processo de desenvolvimento,Desenvolvimento incremental com pequenos incrementos e envolvimento dos clientes para obter feedback.,Documentação detalhada dos requisitos do usuário antes do início do desenvolvimento.,Desenvolvimento Ágil,O que os métodos ágeis têm em comum com os processos de desenvolvimento rápido de software?,Letra C,0
66a80cb338b1093974273e75,Priorizando a documentação extensiva do projeto.,Identificando e eliminando desperdícios nos processos,Limitando a colaboração entre os membros da equipe,Enfatizando a rigidez no planejamento do projeto.,Desenvolvimento Ágil,Como o método Lean contribui para a gestão de projetos?,Letra B,0
66a80cc338b1093974273e77,Enfatizar a necessidade de especificação detalhada do sistema,"Promover a visualização do trabalho, a limitação do trabalho em progresso e a melhoria contínua do processo.",Estabelecer iterações de trabalho fixas para a entrega de valor contínua., Fornecer orientações específicas para escalar o Scrum em ambientes de grande porte.,Desenvolvimento Ágil,Qual é a função do framework Kanban no contexto ágil?,Letra B,0
66a80cf338b1093974273e79,Padronização rígida de processos.,Comunicação efetiva e trabalho em equipe.,Adesão estrita a uma única metodologia ágil,"Rápida entrega de software, independentemente da qualidade.",Desenvolvimento Ágil,Qual é um dos principais valores promovidos pelo Crystal?,Letra B,0
66a80d0938b1093974273e7b,Priorizar a velocidade em detrimento da qualidade.,Promover a entrega contínua de software de alta qualidade.,Ignorar as necessidades específicas do cliente.,Aplicar uma abordagem única e inflexível em todos os projetos. 46. Qual dessas não é uma das seis funções importantes cumpridas pela,Desenvolvimento Ágil,Qual é um dos objetivos do Crystal em relação à entrega de software?,Letra D,0
66a80d3d38b1093974273e7d,Adaptabilidade,Feedback contínuo,Centralização,Experimentação e aprendizado,Desenvolvimento Ágil,Qual dessas não é uma das seis funções importantes cumpridas pelas metodologias ágeis?,Letra C,0
66a80d5138b1093974273e7f,"Reduzir custos, aumentar a burocracia, minimizar o feedback e focar na velocidade.","Reduzir desperdícios, promover a estagnação, priorizar a quantidade sobre a qualidade e minimizar os testes.","Priorizar a documentação extensiva, manter processos inflexíveis, focar na previsibilidade e minimizar a colaboração","Reduzir desperdícios, promover a melhoria contínua, priorizar a qualidade e garantir a entrega contínua de valor. ",Desenvolvimento Ágil,Quais são os quatro principais objetivos da metodologia ágil?,Letra D,0
66a80d6438b1093974273e81,Abordagem rígida e inflexível.,Iteratividade e incrementos de trabalho.,Ênfase na documentação extensiva.,Longos períodos de entrega de software,Desenvolvimento Ágil,Qual é uma das características fundamentais dos métodos ágeis em relação ao desenvolvimento de software?,Letra B,0
66a80d7938b1093974273e83,Manter processos inflexíveis.,Priorizar a documentação extensiva.,Garantir a entrega contínua de valor.,Promover a estagnação dos projetos.,Desenvolvimento Ágil,Qual é uma das funções importantes cumpridas pelas metodologias ágeis?,Letra C,0
66a80da238b1093974273e85,Incentivando a competição entre os membros da equipe.,Promovendo a centralização das decisões,Estimulando a autonomia e o empoderamento das equipes.,Minimizando a comunicação entre os stakeholders,Desenvolvimento Ágil,Como as metodologias ágeis abordam a colaboração e o engajamento da equipe?,Letra C,0
66a817e438b1093974273f6a,A arquitetura define apenas os requisitos funcionais do sistema.,"A arquitetura afeta o desempenho, robustez e manutenibilidade do sistema.",A arquitetura não tem impacto no processo de desenvolvimento de software., A arquitetura é apenas uma etapa inicial e não influencia o resultado final do sistema.,Arquitetura de Software, Qual é a importância da arquitetura de sistema no desenvolvimento de software?,Letra B,0
66ce8897e96cbe3df0606ad6,Sensores e atuadores,Controladores de temperatura,Interfaces de usuário,Componentes de visão e seleção de objetos,Arquitetura de Software,Quais são os principais componentes de um sistema de controle robotizado de empacotamento?,D,0
66ce88c1e96cbe3df0606ad8,Por meio da identificação de requisitos funcionais,Utilizando uma arquitetura de linha de produto,Associando grupos de funções aos componentes em larga escala, Ignorando completamente a decomposição da arquitetura,Arquitetura de Software, Como é possível decompor a arquitetura de um sistema para estruturar a especificação?,C,0
66ce88dee96cbe3df0606ada,O número de componentes,O tipo de linguagem de programação utilizada, O nível de abstração e complexidade do sistema, A estrutura organizacional da equipe de desenvolvimento,Arquitetura de Software,O que diferencia a arquitetura em pequena escala da arquitetura em grande escala?,C,0
66ce8b93e96cbe3df0606adc,"Reusabilidade, eficiência e segurança","Comunicação de stakeholders, análise de sistema e reúso em larga escala"," Flexibilidade, adaptabilidade e interoperabilidade","Documentação, implementação e teste",Arquitetura de Software,Quais são as três vantagens de projetar e documentar explicitamente a arquitetura de software?,B,0
66ce8bb4e96cbe3df0606ade, Por meio de linguagens de descrição de arquitetura (ADLs) exclusivamente,Apenas com diagramas de blocos simples,Utilizando tanto ADLs quanto diagramas de blocos,Através de narrativas detalhadas sem representação gráfica,Arquitetura de Software,Como os modelos de arquitetura são geralmente representados na prática?,C,0
66ce8cfbe96cbe3df0606ae2,Apresentar múltiplas perspectivas da arquitetura,Apoiar a tomada de decisões de arquitetura durante o projeto, Fornecer uma representação abstrata do sistema para comunicação,Descrever detalhadamente cada componente do sistema,Arquitetura de Software,Qual é o papel das visões conceituais na documentação da arquitetura de sistema?,C,0
66ce8dbb922eb4919544caf1,Por ser uma linguagem excessivamente complexa.,Por não oferecer suporte a diagramas de blocos.,Por ser difícil de entender para stakeholders não técnicos.,Por estar mais próxima da implementação do que da arquitetura.,Arquitetura de Software,Por que algumas pessoas consideram a UML inadequada para descrever arquiteturas de software?,Por estar mais próxima da implementação do que da arquitetura.,
66ce8dbb922eb4919544caf2,Facilitar a comunicação entre stakeholders.,Descrever detalhadamente cada componente de um sistema.,Padronizar a documentação de arquiteturas de software.,Descrever e formalizar as arquiteturas de sistema.,Arquitetura de Software,Qual é o propósito das linguagens de descrição de arquitetura (ADLs)?,Descrever e formalizar as arquiteturas de sistema.,
66ce8dbb922eb4919544caf3,Priorizando a documentação detalhada em todos os casos.,Ignorando completamente a documentação de arquitetura.,Desenvolvendo apenas documentação para sistemas críticos.,Enfatizando visões úteis para comunicação em vez de documentação detalhada.,Arquitetura de Software,Como os métodos ágeis abordam a documentação de arquitetura de software?,Enfatizando visões úteis para comunicação em vez de documentação detalhada.,
66ce8dbb922eb4919544caf4,Representações únicas que abrangem todos os aspectos do sistema.,Perspectivas que facilitam a análise de sistemas em tempo de execução.,Diferentes maneiras de visualizar e comunicar aspectos específicos do sistema.,Narrativas detalhadas que descrevem a implementação de cada componente.,Arquitetura de Software,O que são visões da arquitetura em um modelo de arquitetura de software?,Diferentes maneiras de visualizar e comunicar aspectos específicos do sistema.,
66ce8dbb922eb4919544caf5,Para tornar a documentação mais extensa e detalhada.,Para facilitar a comunicação com diferentes stakeholders.,Para aumentar a complexidade do processo de desenvolvimento.,Para satisfazer os requisitos regulatórios.,Arquitetura de Software,Por que é importante ter múltiplas visões da arquitetura de um sistema?,Para facilitar a comunicação com diferentes stakeholders.,
66ce8dbb922eb4919544caf6,Facilidade de compreensão por parte de stakeholders não técnicos.,Capacidade de descrever arquiteturas em nível mais detalhado.,Padronização da documentação de arquiteturas de software.,Formalização e especificação precisa das arquiteturas de sistema.,Arquitetura de Software,Qual é a vantagem das ADLs em comparação com outras formas de documentação de arquitetura?,Formalização e especificação precisa das arquiteturas de sistema.,
66ce8dbb922eb4919544caf7,Priorizando a documentação detalhada em todos os casos.,Ignorando completamente a documentação de arquitetura.,Desenvolvendo apenas documentação para sistemas críticos.,Enfatizando visões úteis para comunicação em vez de documentação detalhada.,Arquitetura de Software,Como os métodos ágeis abordam a documentação de arquitetura de software?,Enfatizando visões úteis para comunicação em vez de documentação detalhada.,
66ce8f27922eb4919544caf8,Representações únicas que abrangem todos os aspectos do sistema.,Perspectivas que facilitam a análise de sistemas em tempo de execução.,Diferentes maneiras de visualizar e comunicar aspectos específicos do sistema.,Narrativas detalhadas que descrevem a implementação de cada componente.,Arquitetura de Software,O que são visões da arquitetura em um modelo de arquitetura de software?,Diferentes maneiras de visualizar e comunicar aspectos específicos do sistema.,
66ce8f27922eb4919544caf9,Para tornar a documentação mais extensa e detalhada.,Para facilitar a comunicação com diferentes stakeholders.,Para aumentar a complexidade do processo de desenvolvimento.,Para satisfazer os requisitos regulatórios.,Arquitetura de Software,Por que é importante ter múltiplas visões da arquitetura de um sistema?,Para facilitar a comunicação com diferentes stakeholders.,
66ce8f27922eb4919544cafa,Facilidade de compreensão por parte de stakeholders não técnicos.,Capacidade de descrever arquiteturas em nível mais detalhado.,Padronização da documentação de arquiteturas de software.,Formalização e especificação precisa das arquiteturas de sistema.,Arquitetura de Software,Qual é a vantagem das ADLs em comparação com outras formas de documentação de arquitetura?,Formalização e especificação precisa das arquiteturas de sistema.,
66ce8f27922eb4919544cafb,Priorizando a documentação detalhada em todos os casos.,Ignorando completamente a documentação de arquitetura.,Desenvolvendo apenas documentação para sistemas críticos.,Enfatizando visões úteis para comunicação em vez de documentação detalhada.,Arquitetura de Software,Como os métodos ágeis abordam a documentação de arquitetura de software?,Enfatizando visões úteis para comunicação em vez de documentação detalhada.,
66ce8f27922eb4919544cafc,Representações únicas que abrangem todos os aspectos do sistema.,Perspectivas que facilitam a análise de sistemas em tempo de execução.,Diferentes maneiras de visualizar e comunicar aspectos específicos do sistema.,Narrativas detalhadas que descrevem a implementação de cada componente.,Arquitetura de Software,O que são visões da arquitetura em um modelo de arquitetura de software?,Diferentes maneiras de visualizar e comunicar aspectos específicos do sistema.,
66ce8f27922eb4919544cafd,Para tornar a documentação mais extensa e detalhada.,Para facilitar a comunicação com diferentes stakeholders.,Para aumentar a complexidade do processo de desenvolvimento.,Para satisfazer os requisitos regulatórios.,Arquitetura de Software,Por que é importante ter múltiplas visões da arquitetura de um sistema?,Para facilitar a comunicação com diferentes stakeholders.,
66ce8f27922eb4919544cafe,Facilidade de compreensão por parte de stakeholders não técnicos.,Capacidade de descrever arquiteturas em nível mais detalhado.,Padronização da documentação de arquiteturas de software.,Formalização e especificação precisa das arquiteturas de sistema.,Arquitetura de Software,Qual é a vantagem das ADLs em comparação com outras formas de documentação de arquitetura?,Formalização e especificação precisa das arquiteturas de sistema.,
66ce8f27922eb4919544caff,Padronizando a documentação da arquitetura.,Proporcionando soluções genéricas para problemas recorrentes.,Limitando a flexibilidade do sistema.,Reduzindo a complexidade da arquitetura.,Arquitetura de Software,Como os padrões de projeto contribuem para a arquitetura de software?,Proporcionando soluções genéricas para problemas recorrentes.,
66ce8f27922eb4919544cb00,Manter a documentação atualizada e relevante.,Desconsiderar as necessidades dos stakeholders.,Priorizar a quantidade sobre a qualidade da documentação.,Utilizar apenas linguagens de descrição de arquitetura (ADLs).,Arquitetura de Software,Quais são os desafios comuns na documentação da arquitetura de software?,Manter a documentação atualizada e relevante.,
66ce8f27922eb4919544cb01,Identificar os requisitos de hardware do sistema.,Definir as interfaces de usuário do sistema.,Organizar a estrutura geral do sistema e seus componentes.,Documentar os testes de aceitação do software.,Arquitetura de Software,Qual é o papel do projeto de arquitetura no desenvolvimento de software?,Organizar a estrutura geral do sistema e seus componentes.,
66ce8f9c922eb4919544cb02,Para aumentar a complexidade do sistema.,Para simplificar o processo de desenvolvimento de software.,Para organizar e estruturar a especificação do sistema.,Para minimizar a comunicação com os stakeholders.,Arquitetura de Software,Por que a decomposição da arquitetura é frequentemente necessária na engenharia de requisitos?,Para organizar e estruturar a especificação do sistema.,
66ce8f9c922eb4919544cb03,Redução da comunicação com os stakeholders.,Facilitação da análise do sistema.,Aumento da complexidade do processo de desenvolvimento.,Restrição ao reúso em larga escala.,Arquitetura de Software,"Quais são as vantagens de projetar e documentar explicitamente a arquitetura de software, de acordo com Bass et al. (2003)?",Facilitação da análise do sistema.,
66ce8f9c922eb4919544cb04,Ser uma ferramenta de gerenciamento de projetos.,Esconder detalhes para simplificar o processo de desenvolvimento.,Estruturar as discussões com stakeholders.,Minimizar a comunicação entre os desenvolvedores.,Arquitetura de Software,"Qual é o principal objetivo da arquitetura de sistema, de acordo com Hofmeister et al. (2000)?",Estruturar as discussões com stakeholders.,
66ce8f9c922eb4919544cb05,Eles determinam exclusivamente os requisitos funcionais do sistema.,Eles têm um impacto mínimo na arquitetura do sistema.,Eles são influenciados pela organização dos componentes do sistema.,Eles não têm relação com a arquitetura do software.,Arquitetura de Software,Como os requisitos não funcionais influenciam a arquitetura de software?,Eles são influenciados pela organização dos componentes do sistema.,
66ce8f9c922eb4919544cb06,Eles determinam exclusivamente a interface do usuário.,"Eles afetam o desempenho, a segurança e a manutenibilidade do sistema.",Eles têm pouca relevância para a arquitetura do software.,Eles são responsáveis apenas pela definição dos requisitos de hardware.,Arquitetura de Software,Qual é a importância de se considerar os requisitos não funcionais durante o processo de projeto de arquitetura de software?,"Eles afetam o desempenho, a segurança e a manutenibilidade do sistema.",
66ce8f9c922eb4919544cb07,A publicação de um livro sobre gerenciamento de configuração.,A introdução do conceito de interação em sistemas de software.,A publicação de um livro sobre padrões de projeto orientado a objetos.,O desenvolvimento de sistemas baseados em Web.,Arquitetura de Software,Qual foi o evento que desencadeou a ampla utilização de padrões de software?,A publicação de um livro sobre padrões de projeto orientado a objetos.,
66ce8f9c922eb4919544cb08,Uma descrição detalhada de um sistema específico.,Uma descrição abstrata e estilizada de boas práticas testadas em diferentes sistemas.,Um conjunto de regras de codificação para linguagens de programação.,Um manual de instruções para desenvolvimento de software.,Arquitetura de Software,Qual é a definição de um padrão de arquitetura?,Uma descrição abstrata e estilizada de boas práticas testadas em diferentes sistemas.,
66ce8f9c922eb4919544cb09,Separar as camadas de hardware de um sistema.,Gerenciar a interação do usuário em sistemas baseados em Web.,Organizar os dados de um sistema de forma hierárquica.,Controlar o fluxo de dados em um sistema de banco de dados.,Arquitetura de Software,Qual é o objetivo principal do padrão MVC (Model-View-Controller)?,Gerenciar a interação do usuário em sistemas baseados em Web.,
66ce8f9c922eb4919544cb0a,Permite que os dados sejam alterados independentemente de sua representação.,Facilita a comunicação entre as diferentes camadas do sistema.,Reduz a complexidade do código em sistemas simples.,Minimiza a necessidade de interação do usuário.,Arquitetura de Software,Quais são as vantagens do padrão MVC?,Permite que os dados sejam alterados independentemente de sua representação.,
66ce8f9c922eb4919544cb0b,Aumento da complexidade do código em sistemas simples.,Limitação na comunicação entre as diferentes camadas do sistema.,Dependência exclusiva de interfaces gráficas para interação do usuário.,Dificuldade em lidar com modelos de dados e interações simples.,Arquitetura de Software,Qual é a principal desvantagem do padrão MVC?,Dificuldade em lidar com modelos de dados e interações simples.,
66ce8f9c922eb4919544cb0c,Na organização dos dados em uma estrutura hierárquica.,Na separação e independência dos elementos de um sistema.,No controle do fluxo de dados em um sistema distribuído.,Na interação direta entre o modelo de dados e a interface do usuário.,Arquitetura de Software,Em que se baseia o padrão de arquitetura em camadas?,Na separação e independência dos elementos de um sistema.,
66ce9023922eb4919544cb0d,Permite a substituição de camadas inteiras sem afetar outras partes do sistema.,Minimiza a necessidade de comunicação entre as diferentes camadas.,Facilita o desenvolvimento de sistemas distribuídos.,Reduz a complexidade do código em sistemas complexos.,Arquitetura de Software,Quais são as vantagens da arquitetura em camadas?,Permite a substituição de camadas inteiras sem afetar outras partes do sistema.,
66ce9023922eb4919544cb0e,Dificuldade em manter a consistência dos dados entre as camadas.,Dependência de interfaces gráficas para interação do usuário.,Possibilidade de aumento do overhead de comunicação entre as camadas.,Limitação na implementação de novas funcionalidades.,Arquitetura de Software,Qual é a principal desvantagem da arquitetura em camadas?,Possibilidade de aumento do overhead de comunicação entre as camadas.,
66ce9023922eb4919544cb0f,Na organização dos dados em uma estrutura hierárquica.,Na separação e independência dos elementos de um sistema.,No compartilhamento centralizado de dados entre os componentes do sistema.,Na comunicação direta entre os clientes e os servidores do sistema.,Arquitetura de Software,Em que se baseia o padrão Repositório?,No compartilhamento centralizado de dados entre os componentes do sistema.,
66ce9023922eb4919544cb10,Permite que os componentes operem de forma independente.,Facilita a integração de novos componentes ao sistema.,Garante a consistência dos dados armazenados.,Reduz a necessidade de comunicação entre os componentes do sistema.,Arquitetura de Software,Quais são as vantagens do padrão Repositório?,Facilita a integração de novos componentes ao sistema.,
66ce9023922eb4919544cb11,Dependência de interfaces gráficas para interação do usuário.,Possibilidade de aumento do overhead de comunicação entre os componentes.,Dificuldade em manter a consistência dos dados armazenados.,Vulnerabilidade a falhas devido ao ponto único de falha no repositório.,Arquitetura de Software,Qual é a principal desvantagem do padrão Repositório?,Vulnerabilidade a falhas devido ao ponto único de falha no repositório.,
66ce9023922eb4919544cb12,Na comunicação direta entre os clientes e os servidores do sistema.,Na organização dos dados em uma estrutura hierárquica.,No compartilhamento centralizado de dados entre os componentes do sistema.,Na separação e independência dos elementos de um sistema.,Arquitetura de Software,Em que se baseia o padrão cliente-servidor?,Na comunicação direta entre os clientes e os servidores do sistema.,
66ce9023922eb4919544cb13,Descrever a estrutura física dos sistemas de software.,Definir as linguagens de programação a serem utilizadas.,Organizar o trabalho da equipe de desenvolvimento.,Identificar características estruturais estáveis dos sistemas de software.,Arquitetura de Software,Qual é a principal função das arquiteturas de aplicação?,Identificar características estruturais estáveis dos sistemas de software.,
66ce9023922eb4919544cb14,Estrutura de Recursos de Processamento.,Empresa de Recursos Planejados.,Enterprise Resource Planning.,Estrutura de Recursos de Produção.,Arquitetura de Software,O que significa ERP no contexto do texto?,Enterprise Resource Planning.,
66ce9023922eb4919544cb15,Processar pedidos do usuário para obter informações.,Interpretar linguagens de programação.,Gerenciar sistemas de informação em camadas.,Traduzir uma linguagem natural para outra.,Arquitetura de Software,Qual é a função dos sistemas de processamento de transações?,Processar pedidos do usuário para obter informações.,
66ce9023922eb4919544cb16,Um pedido feito pelo usuário.,Uma sequência de operações tratadas como uma única unidade.,Uma operação que não precisa ser concluída.,Um processo de comunicação entre servidores.,Arquitetura de Software,O que é uma transação em sistemas de processamento de transações?,Uma sequência de operações tratadas como uma única unidade.,
66ce9023922eb4919544cb17,Traduzir linguagens de programação.,Fornecer acesso a grandes bases de informações.,Processar transações bancárias.,Gerenciar sistemas de processamento de linguagens.,Arquitetura de Software,Qual é o principal objetivo dos sistemas de informação?,Fornecer acesso a grandes bases de informações.,
66ce9023922eb4919544cb18,Interface de usuário.,Comunicação de usuário.,Recuperação e modificação de informação.,Banco de dados de gerenciamento de transações.,Arquitetura de Software,O que é a camada mais baixa em um sistema de informação em camadas?,Banco de dados de gerenciamento de transações.,
66ce9023922eb4919544cb19,Analisador léxico.,Tabela de símbolos.,Árvore de sintaxe.,Gerador de código.,Arquitetura de Software,Qual é o principal componente em um sistema de processamento de linguagens?,Analisador léxico.,
66ce9023922eb4919544cb1a,Executa o código resultante.,Cria uma máquina abstrata.,Traduz uma linguagem natural em outra.,Gera códigos de máquina abstrata.,Arquitetura de Software,O que um tradutor faz em um sistema de processamento de linguagens?,Traduz uma linguagem natural em outra.,
66ce9023922eb4919544cb1b,Os componentes funcionam em paralelo.,Cada componente se comunica diretamente com o banco de dados.,Os componentes são organizados em sequência.,Não há compartilhamento de informações entre os componentes.,Arquitetura de Software,Qual é uma característica da arquitetura de duto e filtro?,Os componentes são organizados em sequência.,
66ce9023922eb4919544cb1c,Um sistema que processa transações bancárias.,Uma ferramenta de edição de texto.,Um sistema que traduz uma linguagem de programação em código de máquina.,Um componente de interface de usuário.,Arquitetura de Software,O que é um compilador?,Um sistema que traduz uma linguagem de programação em código de máquina.,
66ce9023922eb4919544cb1d,Lida com todas as entradas e saídas da interface de usuário.,Fornece funcionalidade de interface de usuário.,Implementa a proteção do sistema.,Gerencia transações bancárias.,Arquitetura de Software,Em que consiste a camada de comunicação de usuário em um sistema de informação em camadas?,Lida com todas as entradas e saídas da interface de usuário.,
66ce9023922eb4919544cb1e,Converter instruções da linguagem-fonte.,Garantir que as operações sejam concluídas antes de alterar o banco de dados.,Armazenar dados compartilhados entre os componentes.,Executar as instruções de máquina.,Arquitetura de Software,Qual é a função do repositório em uma arquitetura de processamento de linguagens?,Armazenar dados compartilhados entre os componentes.,
66ce9023922eb4919544cb1f,Descrever a estrutura e organização dos diferentes tipos de sistemas de software.,Fornecer exemplos específicos de sistemas de aplicação comuns.,Criar um vocabulário técnico para falar sobre tipos de aplicações.,Promover o desenvolvimento de sistemas únicos para cada empresa.,Arquitetura de Software,Qual é o objetivo principal das arquiteturas de aplicação?,Descrever a estrutura e organização dos diferentes tipos de sistemas de software.,
66ce90b1922eb4919544cb20,"Os requisitos de sistema são declarações abstratas de alto nível, enquanto os requisitos de usuário são descrições detalhadas das funções do sistema.","Requisitos de sistema descrevem as funções, serviços e restrições operacionais do sistema, enquanto requisitos de usuário são declarações de serviços que o sistema deve fornecer.","Requisitos de sistema são restritos à equipe de desenvolvimento, enquanto requisitos de usuário são comunicados aos usuários finais.","Os requisitos de sistema são desenvolvidos após a implementação do sistema, enquanto os requisitos de usuário são estabelecidos no início do processo de engenharia de requisitos.",Engenharia de Requisitos,O que são requisitos de sistema e como eles se diferenciam dos requisitos de usuário?,"Requisitos de sistema descrevem as funções, serviços e restrições operacionais do sistema, enquanto requisitos de usuário são declarações de serviços que o sistema deve fornecer.",
66ce90b1922eb4919544cb21,Criar documentação extensa para o sistema.,Definir exatamente o que deve ser implementado no sistema.,"Identificar, analisar, documentar e verificar os serviços e restrições do sistema.",Garantir que os desenvolvedores entendam completamente os requisitos do cliente.,Engenharia de Requisitos,Qual é o principal objetivo da engenharia de requisitos?,"Identificar, analisar, documentar e verificar os serviços e restrições do sistema.",
66ce90b1922eb4919544cb22,Para evitar conflitos entre os stakeholders.,Para permitir que os desenvolvedores entendam as necessidades dos clientes.,Para garantir que os usuários finais compreendam as funcionalidades do sistema.,Para facilitar a comunicação e o desenvolvimento do sistema.,Engenharia de Requisitos,Por que é importante fazer uma distinção clara entre requisitos de usuário e requisitos de sistema?,Para facilitar a comunicação e o desenvolvimento do sistema.,
66ce90b1922eb4919544cb23,Falta de documentação e comunicação inadequada.,Dificuldade em identificar os stakeholders e definir os requisitos.,Conflitos entre os requisitos e mudanças nos requisitos durante o desenvolvimento.,Todas as opções anteriores.,Engenharia de Requisitos,Quais são os principais problemas que podem surgir durante o processo de engenharia de requisitos?,Todas as opções anteriores.,
66ce90b1922eb4919544cb24,Requisitos de software e requisitos de hardware.,Requisitos de usuário e requisitos de sistema.,Requisitos funcionais e requisitos não funcionais.,Requisitos de desempenho e requisitos de segurança.,Engenharia de Requisitos,Quais são os tipos de requisitos frequentemente identificados na engenharia de requisitos?,Requisitos funcionais e requisitos não funcionais.,
66ce90b1922eb4919544cb25,"Os requisitos funcionais especificam como o sistema deve se comportar, enquanto os requisitos não funcionais especificam as restrições ao comportamento do sistema.","Os requisitos funcionais descrevem as propriedades emergentes do sistema, enquanto os requisitos não funcionais descrevem as funções específicas que o sistema deve fornecer.","Os requisitos funcionais são relacionados ao hardware, enquanto os requisitos não funcionais são relacionados ao software.",Os requisitos funcionais são mais importantes do que os requisitos não funcionais para o sucesso do projeto.,Engenharia de Requisitos,O que são requisitos funcionais e como eles são diferentes dos requisitos não funcionais?,"Os requisitos funcionais especificam como o sistema deve se comportar, enquanto os requisitos não funcionais especificam as restrições ao comportamento do sistema.",
66ce90b1922eb4919544cb26,Restrições de desempenho e segurança.,Funções que o sistema deve realizar em resposta a entradas específicas.,Restrições de tempo e orçamento.,Interface do usuário e design visual do sistema.,Engenharia de Requisitos,Quais são exemplos de requisitos funcionais em um sistema de software?,Funções que o sistema deve realizar em resposta a entradas específicas.,
66ce90b1922eb4919544cb27,Para tornar os requisitos mais claros para os desenvolvedores.,Para permitir que os clientes expressem suas metas de forma mais precisa.,Para facilitar a medição e a verificação do cumprimento dos requisitos.,Para garantir que os requisitos não funcionais sejam mais importantes do que os funcionais.,Engenharia de Requisitos,Por que é importante especificar requisitos não funcionais de forma quantitativa sempre que possível?,Para facilitar a medição e a verificação do cumprimento dos requisitos.,
66ce90b1922eb4919544cb28,Requisitos de interface do usuário e design visual.,Requisitos de desempenho e segurança.,Requisitos de funcionalidade e usabilidade.,Requisitos de entrada e saída de dados.,Engenharia de Requisitos,Quais são exemplos de requisitos não funcionais em um sistema de software?,Requisitos de desempenho e segurança.,
66ce90b1922eb4919544cb29,"Eles não podem entrar em conflito, pois são independentes dos requisitos funcionais.",Requisitos não funcionais podem exigir recursos que são limitados ou restritos por outros requisitos.,Requisitos não funcionais são sempre priorizados sobre os requisitos funcionais.,Os requisitos não funcionais não podem entrar em conflito porque são especificados separadamente.,Engenharia de Requisitos,Como os requisitos não funcionais podem entrar em conflito com outros requisitos?,Requisitos não funcionais podem exigir recursos que são limitados ou restritos por outros requisitos.,
66ce9114922eb4919544cb2a,Para garantir que sejam atendidos antes dos requisitos funcionais.,Para permitir que os desenvolvedores ignorem esses requisitos se forem muito complexos.,Para facilitar a priorização e a compreensão da importância desses requisitos.,Para impedir que os usuários finais solicitem mudanças nos requisitos funcionais.,Engenharia de Requisitos,Por que é importante destacar os requisitos não funcionais em um documento de requisitos?,Para facilitar a priorização e a compreensão da importância desses requisitos.,
66ce9114922eb4919544cb2b,Eles são menos importantes do que os requisitos funcionais.,Eles determinam a aparência visual do sistema.,"Eles influenciam diretamente a segurança, confiabilidade e desempenho do sistema.",Eles são irrelevantes em sistemas críticos.,Engenharia de Requisitos,Qual é a importância dos requisitos não funcionais em sistemas críticos?,"Eles influenciam diretamente a segurança, confiabilidade e desempenho do sistema.",
66ce9114922eb4919544cb2c,Tempo e custo de implementação.,Quantidade de código fonte.,Taxa de erros e tempo de resposta.,Número de usuários registrados.,Engenharia de Requisitos,Quais são algumas métricas comuns usadas para especificar requisitos não funcionais?,Taxa de erros e tempo de resposta.,
66ce9114922eb4919544cb2d,Por ordem de importância para os usuários finais.,Por ordem alfabética.,"Por funcionalidade, restrições e requisitos não funcionais.",Não há organização específica.,Engenharia de Requisitos,Como os requisitos de sistema são organizados em um documento de requisitos?,"Por funcionalidade, restrições e requisitos não funcionais.",
66ce9114922eb4919544cb2e,Para garantir que os requisitos sejam atendidos pelo sistema final.,Para tornar o documento de requisitos mais extenso.,Para permitir que os desenvolvedores decidam quais requisitos implementar.,Para evitar que os clientes solicitem alterações nos requisitos.,Engenharia de Requisitos,Por que é importante manter a consistência e a completude dos requisitos durante o processo de engenharia de requisitos?,Para garantir que os requisitos sejam atendidos pelo sistema final.,
66ce9114922eb4919544cb2f,Os clientes não têm metas claras.,As metas podem ser vagas e difíceis de quantificar.,Os clientes não têm interesse em traduzir metas em requisitos.,As metas dos clientes mudam frequentemente.,Engenharia de Requisitos,Quais são as principais dificuldades enfrentadas pelos clientes ao traduzir metas em requisitos mensuráveis?,As metas podem ser vagas e difíceis de quantificar.,
66ce9114922eb4919544cb30,Eles são documentados em documentos separados para evitar confusão.,"Os requisitos funcionais descrevem o que o sistema deve fazer, enquanto os requisitos não funcionais especificam as restrições do sistema.",Os requisitos funcionais e não funcionais são interdependentes e são documentados juntos para uma compreensão completa do sistema.,"Os requisitos funcionais são mais importantes e, portanto, são documentados separadamente dos requisitos não funcionais.",Engenharia de Requisitos,Como os requisitos funcionais e não funcionais são relacionados e documentados?,Os requisitos funcionais e não funcionais são interdependentes e são documentados juntos para uma compreensão completa do sistema.,
66ce9114922eb4919544cb31,Aumento do desempenho e da segurança.,Diminuição da satisfação do cliente e possíveis falhas do sistema.,Redução dos custos de desenvolvimento.,Maior facilidade de manutenção do sistema.,Engenharia de Requisitos,Quais são as possíveis consequências de não cumprir requisitos não funcionais em um sistema?,Diminuição da satisfação do cliente e possíveis falhas do sistema.,
66ce9114922eb4919544cb32,Requisitos de desempenho e usabilidade.,Requisitos de segurança e interface do usuário.,Requisitos de conformidade com regulamentações e padrões da indústria.,Requisitos de funcionalidade e design visual.,Engenharia de Requisitos,Quais são exemplos de requisitos organizacionais e externos em um sistema de software?,Requisitos de conformidade com regulamentações e padrões da indústria.,
66ce9114922eb4919544cb33,Porque esses requisitos não são importantes.,Porque as propriedades emergentes do sistema afetam diretamente a satisfação do cliente.,Porque os requisitos não funcionais não podem ser medidos.,Porque os requisitos não funcionais são mais fáceis de implementar do que os funcionais.,Engenharia de Requisitos,Por que é importante distinguir os requisitos não funcionais relacionados às propriedades emergentes do sistema?,Porque as propriedades emergentes do sistema afetam diretamente a satisfação do cliente.,
66ce9114922eb4919544cb34,Uma carta formal de agradecimento,Uma declaração oficial do que os desenvolvedores do sistema devem implementar,Um registro de bugs encontrados durante o desenvolvimento,Um guia de boas práticas de programação,Engenharia de Requisitos,O que é um documento de requisitos de software?,Uma declaração oficial do que os desenvolvedores do sistema devem implementar,
66ce9191922eb4919544cb35,Porque consideram os documentos de requisitos como a única fonte confiável de informação.,"Porque argumentam que os requisitos mudam rapidamente, tornando os documentos de requisitos obsoletos.",Porque acreditam que os documentos de requisitos são muito flexíveis.,Porque consideram que os documentos de requisitos são úteis apenas para desenvolvedores experientes.,Engenharia de Requisitos,Por que os métodos ágeis de desenvolvimento questionam a eficácia dos documentos de requisitos?,"Porque argumentam que os requisitos mudam rapidamente, tornando os documentos de requisitos obsoletos.",
66ce9191922eb4919544cb36,Apenas os engenheiros de software,Apenas a alta administração da organização,Desde a alta administração da organização até os engenheiros responsáveis pelo desenvolvimento do software,Apenas os clientes externos da organização,Engenharia de Requisitos,Quem são os possíveis usuários de um documento de requisitos?,Desde a alta administração da organização até os engenheiros responsáveis pelo desenvolvimento do software,
66ce9191922eb4919544cb37,Para tornar o documento mais longo e detalhado,Para ajudar os engenheiros de manutenção de sistema a evitar decisões de projeto restritivas,Para aumentar o número de páginas do documento,Para confundir os leitores sobre as mudanças futuras do sistema,Engenharia de Requisitos,Qual é a importância de incluir informações sobre a evolução prevista do sistema em um documento de requisitos?,Para ajudar os engenheiros de manutenção de sistema a evitar decisões de projeto restritivas,
66ce9191922eb4919544cb38,Por ordem alfabética,De acordo com as preferências do desenvolvedor,De acordo com os diferentes subsistemas que compõem o sistema,"Não são organizados, são apresentados aleatoriamente",Engenharia de Requisitos,Como os requisitos de sistema são geralmente organizados em um documento de requisitos?,De acordo com os diferentes subsistemas que compõem o sistema,
66ce9191922eb4919544cb39,Devem ser complexos e ambíguos,"Devem ser claros, inequívocos, de fácil compreensão, completos e consistentes",Devem ser escritos apenas em linguagem formal,Devem ser irrelevantes para os usuários finais,Engenharia de Requisitos,Quais são as características ideais dos requisitos de usuário e de sistema?,"Devem ser claros, inequívocos, de fácil compreensão, completos e consistentes",
66ce9191922eb4919544cb3a,Usar jargões e siglas para tornar o texto mais técnico,Inventar um formato-padrão e garantir que todas as definições de requisitos aderem a esse formato,Escrever os requisitos de forma ambígua para dar mais flexibilidade,"Não fornecer justificativas para os requisitos, para evitar confusão",Engenharia de Requisitos,Qual é a abordagem recomendada para minimizar os mal-entendidos ao escrever requisitos em linguagem natural?,Inventar um formato-padrão e garantir que todas as definições de requisitos aderem a esse formato,
66ce9191922eb4919544cb3b,Aumentar a variabilidade na especificação,Reduzir a expressividade da linguagem natural,Organizar os requisitos de forma mais eficaz e uniforme,Tornar os requisitos mais difíceis de entender,Engenharia de Requisitos,Qual é a principal vantagem das especificações estruturadas na escrita de requisitos de sistema?,Organizar os requisitos de forma mais eficaz e uniforme,
66ce9191922eb4919544cb3c,Usando linguagem natural e diagramas simples,Usando apenas diagramas complexos,Usando modelos matemáticos e abstratos,Usando linguagem formal e técnica,Engenharia de Requisitos,Como são representados os requisitos de sistema na linguagem de descrição de projeto?,Usando linguagem natural e diagramas simples,
66ce9191922eb4919544cb3d,Os requisitos podem ser muito claros e fáceis de entender,Os requisitos podem ser inconsistentes e ambíguos,Os requisitos podem ser muito simples e diretos,Os requisitos podem ser irrelevantes para o sistema,Engenharia de Requisitos,Quais são os possíveis problemas ao escrever requisitos em linguagem natural?,Os requisitos podem ser irrelevantes para o sistema,
66ce9191922eb4919544cb3e,Implementação de requisitos,Elicitação e análise de requisitos,Teste de requisitos,Validação de requisitos,Engenharia de Requisitos,O que constitui o próximo estágio do processo de engenharia de requisitos após o estudo inicial de viabilidade?,Elicitação e análise de requisitos,
66ce9191922eb4919544cb3f,Apenas os desenvolvedores de software,Apenas os usuários finais,Qualquer pessoa afetada pelos requisitos do sistema,Apenas os engenheiros de manutenção de sistemas,Engenharia de Requisitos,Quem são os stakeholders do sistema mencionados no texto?,Qualquer pessoa afetada pelos requisitos do sistema,
66ce9346922eb4919544cb40,Implementação de requisitos,Documentação de requisitos,Priorização e negociação de requisitos,Validação de requisitos,Engenharia de Requisitos,Qual é uma das atividades do processo de elicitação e análise de requisitos?,Priorização e negociação de requisitos,
66ce9346922eb4919544cb41,Para ocultar requisitos irrelevantes,Para criar confusão entre os stakeholders,Para identificar subsistemas e associar requisitos a cada subsistema,Para reduzir a comunicação entre a equipe de desenvolvimento,Engenharia de Requisitos,Por que é importante a classificação e organização de requisitos durante a elicitação e análise?,Para identificar subsistemas e associar requisitos a cada subsistema,
66ce9346922eb4919544cb42,Os requisitos são ocultados dos stakeholders,Os requisitos são implementados imediatamente,Os requisitos entram em conflito e exigem negociação,Os requisitos são completamente ignorados,Engenharia de Requisitos,O que pode acontecer durante a atividade de priorização e negociação de requisitos?,Os requisitos entram em conflito e exigem negociação,
66ce9346922eb4919544cb43,Implementação do sistema,Feedback contínuo dos stakeholders,Documentação dos requisitos,Validação dos requisitos,Engenharia de Requisitos,Qual é o resultado final da atividade de especificação de requisitos?,Documentação dos requisitos,
66ce9346922eb4919544cb44,Porque não há feedback entre as atividades,Porque as atividades são realizadas em uma única iteração,Porque há feedback contínuo entre as atividades,Porque as atividades não estão relacionadas entre si,Engenharia de Requisitos,Por que a elicitação de requisitos é considerado um processo iterativo?,Porque há feedback contínuo entre as atividades,
66ce9346922eb4919544cb45,Falta de stakeholders,Falta de documentação,Diferenças entre os stakeholders e requisitos inviáveis,Conflitos entre a equipe de desenvolvimento,Engenharia de Requisitos,Quais são as dificuldades encontradas no processo de elicitação de requisitos?,Diferenças entre os stakeholders e requisitos inviáveis,
66ce9346922eb4919544cb46,Rigidez e falta de abertura para novas ideias,Fechamento para diferentes perspectivas,Abertura a novas ideias e estimulação do envolvimento do entrevistado,Restrição de discussões,Engenharia de Requisitos,Quais são as características de entrevistadores eficazes?,Abertura a novas ideias e estimulação do envolvimento do entrevistado,
66ce9346922eb4919544cb47,Porque são simples e fáceis de criar,Porque não exigem a participação dos stakeholders,Porque ajudam a visualizar exemplos de interações do sistema,Porque substituem completamente outras técnicas de elicitação,Engenharia de Requisitos,Por que os cenários são considerados úteis durante a elicitação de requisitos?,Porque ajudam a visualizar exemplos de interações do sistema,
66ce9346922eb4919544cb48,Um documento de requisitos.,Uma técnica de validação de requisitos.,Uma técnica de modelagem de sistemas.,Uma técnica de descoberta de requisitos.,Engenharia de Requisitos,Qual é a definição mais simples de um caso de uso?,Uma técnica de descoberta de requisitos.,
66ce9346922eb4919544cb49,Como elipses.,Como linhas.,Como figuras palito.,Como retângulos.,Engenharia de Requisitos,Como são representados os atores nos diagramas de casos de uso?,Como figuras palito.,
66ce9346922eb4919544cb4a,Segmentos através de um caso de uso.,Representações gráficas de interações.,Modelos de alto nível.,Descrições textuais de casos de uso.,Engenharia de Requisitos,O que são cenários de acordo com Stevens e Pooley (2006)?,Segmentos através de um caso de uso.,
66ce9385922eb4919544cb4b,Requisitos mal documentados.,Falta de prototipagem.,Mudanças no ambiente técnico.,Orçamento insuficiente.,Engenharia de Requisitos,"Qual é uma das razões pelas quais muitos sistemas de software são entregues, mas nunca são usados?",Requisitos mal documentados.,
66ce9385922eb4919544cb4c,Uma técnica de validação de requisitos.,Um método de análise de problemas.,Uma técnica de observação para compreender processos operacionais.,Um modelo de interação em sistemas cooperativos.,Engenharia de Requisitos,"O que é etnografia, de acordo com o texto?",Uma técnica de observação para compreender processos operacionais.,
66ce9385922eb4919544cb4d,Requisitos de interface e requisitos de segurança.,Requisitos de desempenho e requisitos de usabilidade.,Requisitos de cooperação e requisitos derivados da maneira como as pessoas realmente trabalham.,Requisitos de integração e requisitos de escalabilidade.,Engenharia de Requisitos,Quais são os dois tipos de requisitos derivados da etnografia?,Requisitos de cooperação e requisitos derivados da maneira como as pessoas realmente trabalham.,
66ce9385922eb4919544cb4e,Um processo para encontrar problemas com os requisitos.,Um documento formal de requisitos.,Uma etapa do ciclo de vida do desenvolvimento de software.,Uma técnica para criar protótipos de sistemas.,Engenharia de Requisitos,O que é a validação de requisitos?,Um processo para encontrar problemas com os requisitos.,
66ce9385922eb4919544cb4f,Por meio de revisões de requisitos.,Através da geração de casos de teste.,Verificando se os requisitos são testáveis.,Avaliando a consistência dos requisitos.,Engenharia de Requisitos,Como são realizadas as verificações de validade de requisitos?,Verificando se os requisitos são testáveis.,
66ce9385922eb4919544cb50,Reduzir os custos de implementação.,Aumentar a flexibilidade do sistema.,Garantir que todas as mudanças sejam implementadas.,Tratar todas as propostas de mudanças de forma consistente.,Engenharia de Requisitos,Qual é a vantagem de usar um processo formal de gerenciamento de mudanças?,Tratar todas as propostas de mudanças de forma consistente.,
66ce9385922eb4919544cb51,Realizar prototipagem contínua.,Evitar processos formais de gerenciamento de mudanças.,Manter o documento de requisitos modular e atualizado.,Priorizar mudanças no sistema sobre a documentação dos requisitos.,Engenharia de Requisitos,O que é essencial para minimizar a defasagem entre a especificação de requisitos e a implementação do sistema?,Manter o documento de requisitos modular e atualizado.,
66ce9401922eb4919544cb52,Desenvolver novas funcionalidades,Corrigir defeitos,Redefinir requisitos,Ignorar mudanças no ambiente,Manutenção de Software,Qual é o principal objetivo da manutenção de software?,Corrigir defeitos,
66ce9401922eb4919544cb53,"Corretiva, preventiva, adaptativa","Evolutiva, adaptativa, perfectiva","Corretiva, adaptativa, adicional","Preventiva, evolutiva, perfectiva",Manutenção de Software,Quais são os três tipos de manutenção de software?,"Corretiva, preventiva, adaptativa",
66ce9401922eb4919544cb54,Correção de erros de codificação,Mudanças no ambiente do sistema,Adição de novas funcionalidades,Melhoria da estrutura do programa,Manutenção de Software,O que é adaptação ambiental na manutenção de software?,Mudanças no ambiente do sistema,
66ce9401922eb4919544cb55,Corretiva,Adaptativa,Adicional,Perfectiva,Manutenção de Software,Qual é o tipo de manutenção mais cara devido à necessidade de extenso redesenho do sistema?,Perfectiva,
66ce9401922eb4919544cb56,Códigos bem estruturados,Boas práticas de desenvolvimento,Problemas no código que podem ser melhorados,Testes de regressão bem-sucedidos,Manutenção de Software,O que significa 'maus cheiros' no contexto da refatoração de software?,Problemas no código que podem ser melhorados,
66ce9401922eb4919544cb57,Menos riscos,Custo reduzido,Maior flexibilidade,Melhor desempenho,Manutenção de Software,Qual é o principal benefício da reengenharia de software em comparação com o desenvolvimento de um novo software?,Custo reduzido,
66ce9401922eb4919544cb58,Criar novos códigos a partir do zero,Analisar e extrair informações de um programa existente,Implementar novas funcionalidades,Realizar testes de regressão,Manutenção de Software,Em que consiste a engenharia reversa no processo de reengenharia de software?,Analisar e extrair informações de um programa existente,
66ce9401922eb4919544cb59,Adição de novas funcionalidades,Redução da manutenibilidade do código,Melhoria contínua do código existente,Ignorar a qualidade do código,Manutenção de Software,O que é a refatoração no desenvolvimento de software?,Melhoria contínua do código existente,
66ce9401922eb4919544cb5a,Adicionar novas funcionalidades,Melhorar a estrutura e legibilidade do código,Reduzir o número de testes,Aumentar a complexidade do software,Manutenção de Software,Qual é o objetivo principal da refatoração?,Melhorar a estrutura e legibilidade do código,
66ce9401922eb4919544cb5b,Códigos diferentes para funcionalidades distintas,Mesmo código utilizado em diferentes partes do programa,Código que nunca é usado,Código que não possui documentação,Manutenção de Software,O que significa código duplicado na refatoração?,Mesmo código utilizado em diferentes partes do programa,
66ce9401922eb4919544cb5c,Melhora na legibilidade,Redução dos custos de manutenção,Degradação gradual da qualidade do código,Aumento da velocidade de desenvolvimento,Manutenção de Software,Qual é o impacto da falta de refatoração em um programa ao longo do tempo?,Degradação gradual da qualidade do código,
66ce9401922eb4919544cb5d,Adição de novas funcionalidades,Melhoria da estrutura do código,Redução da complexidade,Testes de regressão,Manutenção de Software,O que é geralmente evitado durante a refatoração de um programa?,Adição de novas funcionalidades,
66ce9401922eb4919544cb5e,Indicadores de um código bem estruturado,Sinais de problemas no código que podem ser melhorados,Marcadores de códigos não utilizados,Elementos irrelevantes no código,Manutenção de Software,O que são 'maus cheiros' no contexto da refatoração de software?,Sinais de problemas no código que podem ser melhorados,
66ce9401922eb4919544cb5f,Remover códigos duplicados,Melhorar a estrutura do programa,Alterar os dados para refletir mudanças no programa,Implementar novas funcionalidades,Manutenção de Software,Qual é o propósito da reengenharia de dados durante a reengenharia de software?,Alterar os dados para refletir mudanças no programa,
66ce9401922eb4919544cb60,Métodos que são eficazes e não precisam de alterações,Métodos que têm um número excessivo de linhas de código,Métodos que são curtos e precisam ser expandidos,Métodos que não são necessários,Manutenção de Software,O que significa 'métodos longos' na refatoração de software?,Métodos que têm um número excessivo de linhas de código,
66ce9461922eb4919544cb61,Redução dos custos de desenvolvimento,Aumento da velocidade de desenvolvimento,Melhoria contínua da qualidade do código,Ignorar a documentação,Manutenção de Software,Qual é a vantagem da refatoração no contexto de métodos ágeis de desenvolvimento de software?,Melhoria contínua da qualidade do código,
66ce9461922eb4919544cb62,Código que não é executado,Código que não possui comentários,Código que é usado em várias partes do programa,Código que não possui testes de unidade,Manutenção de Software,O que é considerado como um indicador de código redundante na refatoração de software?,Código que é usado em várias partes do programa,
66ce9461922eb4919544cb63,Redução dos custos de manutenção,Identificação antecipada de defeitos,Ignorar a necessidade de testes,Aumento da complexidade do código,Manutenção de Software,Quais são os benefícios de se realizar a manutenção preventiva?,Identificação antecipada de defeitos,
66ce9461922eb4919544cb64,Prevenção de defeitos antes que ocorram,Correção de defeitos após sua detecção,Adição de novas funcionalidades,Melhoria contínua do código,Manutenção de Software,O que é a manutenção corretiva no contexto de software?,Correção de defeitos após sua detecção,
66ce9461922eb4919544cb65,Adicionar novas funcionalidades,Corrigir defeitos após a detecção,Adaptar o software a mudanças no ambiente,Remover códigos duplicados,Manutenção de Software,Qual é o objetivo principal da manutenção adaptativa?,Adaptar o software a mudanças no ambiente,
66ce9461922eb4919544cb66,Reparar danos causados pelo tempo.,Corrigir defeitos introduzidos durante o uso.,Adaptar o software a novas realidades ou ambientes externos.,Aumentar a carga de utilização do software.,Manutenção de Software,Qual é o principal objetivo da manutenção de software?,Adaptar o software a novas realidades ou ambientes externos.,
66ce9461922eb4919544cb67,Corrigem defeitos em produção.,Introduzem novas funcionalidades.,Ajustam o software a novos ambientes externos.,Melhoram a qualidade do software.,Manutenção de Software,O que caracteriza as manutenções do tipo adaptativas?,Ajustam o software a novos ambientes externos.,
66ce9461922eb4919544cb68,Corretivas.,Adaptativas.,Evolutivas.,Preventivas.,Manutenção de Software,Como são classificadas as migrações para novas tecnologias em termos de manutenção?,Adaptativas.,
66ce9461922eb4919544cb69,"Corretivas, Evolutivas, Preventivas.","Adaptativas, Corretivas, Estéticas.","Corretivas, Evolutivas, Adaptativas.","Estéticas, Evolutivas, Adaptativas.",Manutenção de Software,Quais são os três tipos principais de manutenções em software?,"Corretivas, Evolutivas, Adaptativas.",
66ce9461922eb4919544cb6a,Ausência de documentação.,Baixa manutenibilidade do software.,Registro insuficiente de manutenções anteriores.,Sobrecarga de tarefas.,Manutenção de Software,O que é destacado como um dos problemas gerenciais na manutenção de software?,Ausência de documentação.,
66ce9461922eb4919544cb6b,Menos de 20% dos investimentos.,Cerca de 30% dos investimentos.,Mais de 50% dos investimentos.,Não há custos financeiros associados.,Manutenção de Software,Qual é a importância financeira associada à manutenção de software?,Mais de 50% dos investimentos.,
66ce9461922eb4919544cb6c,Substituição imediata de sistemas.,Falta de habilidade em mudar software rapidamente.,Baixa complexidade dos softwares produzidos.,Ausência de ferramentas de gerenciamento.,Manutenção de Software,Qual um dos principais desafios para as organizações na manutenção de software?,Falta de habilidade em mudar software rapidamente.,
66ce9461922eb4919544cb6d,Gerenciais e Técnicos.,Financeiros e Técnicos.,Gerenciais e de Comunicação.,Estruturais e de Manutenção.,Manutenção de Software,Como são classificados os problemas na manutenção de software?,Gerenciais e Técnicos.,
66ce9461922eb4919544cb6e,Correções emergenciais.,Adequação do software a um novo ambiente externo.,Adição de novas funcionalidades e melhorias.,Introdução de defeitos causados pelo tempo.,Manutenção de Software,O que caracteriza as manutenções do tipo evolutivas?,Adição de novas funcionalidades e melhorias.,
66ce94dd922eb4919544cb6f,Sobrecarga de tarefas.,Elevada rotatividade de membros.,Documentação insuficiente.,Falhas de comunicação com o usuário.,Manutenção de Software,O que é destacado como um problema técnico na manutenção de software?,Documentação insuficiente.,
66ce94dd922eb4919544cb70,Para aumentar a complexidade dos softwares.,Para tornar os testes mais caros.,Para garantir a cobertura de todos os testes.,Para evitar a realização de testes manuais.,Manutenção de Software,Por que a automação dos testes de regressão é considerada importante?,Para garantir a cobertura de todos os testes.,
66ce94dd922eb4919544cb71,Baixa complexidade dos softwares.,Subcontratação de empresas terceirizadas.,Registro insuficiente de manutenções anteriores.,Expectativas elevadas dos usuários.,Manutenção de Software,O que é destacado como uma dificuldade na previsão de esforços de manutenção?,Registro insuficiente de manutenções anteriores.,
66ce94dd922eb4919544cb72,Automatizar todos os testes de uma vez.,Automatizar partes do sistema a cada nova demanda.,Realizar testes manuais a cada nova demanda.,Evitar completamente a automação.,Manutenção de Software,Qual é a recomendação para lidar com o alto custo da automação dos testes de regressão?,Automatizar partes do sistema a cada nova demanda.,
66ce94dd922eb4919544cb73,Manutenção Adaptativa.,Fase de Declínio.,Período de Testes.,Etapa de Introdução.,Manutenção de Software,O que é uma fase do ciclo de vida do software na manutenção?,Fase de Declínio.,
66ce94dd922eb4919544cb74,Redução da complexidade do código.,Falhas de comunicação com o usuário.,Sobrecarga de tarefas.,Aumento da documentação.,Manutenção de Software,Quais são os possíveis efeitos colaterais da realização de processos de manutenção?,Sobrecarga de tarefas.,
66ce94dd922eb4919544cb75,Falta de controle de versão.,Baixa manutenibilidade do software.,Considerar as mudanças no ambiente do sistema.,Registro insuficiente de manutenções anteriores.,Manutenção de Software,O que é destacado como uma característica importante para melhorar o processo de manutenção?,Considerar as mudanças no ambiente do sistema.,
66ce94dd922eb4919544cb76,Substituição de tecnologias.,Aumento da complexidade do código.,Avaliação baseada na idade do software.,Estimativa de prazo para correções.,Manutenção de Software,"Na fase de declínio do software, o que deve ser avaliado para decidir sobre a retirada do sistema de operação?",Avaliação baseada na idade do software.,
66ce94dd922eb4919544cb77,Redução de custos.,Falta de gerenciamento.,Abordagem preventiva.,Abrangência do significado de manutenção.,Manutenção de Software,Qual é a justificativa para a alta complexidade na atividade de manutenção?,Abrangência do significado de manutenção.,
66ce94dd922eb4919544cb78,Automatização de testes.,Previsão de esforços.,Registro de manutenções anteriores.,Avaliação do ciclo de vida do software.,Manutenção de Software,O que é como uma atividade gerencial complexa na manutenção de software?,Previsão de esforços.,
66ce955c922eb4919544cb79,Desenvolver modelos abstratos de um sistema.,Implementar diretamente o sistema.,Documentar apenas a estrutura do sistema.,Ignorar completamente os detalhes do sistema.,Modelagem de Software,Qual é o objetivo principal da modelagem de sistemas?,Desenvolver modelos abstratos de um sistema.,
66ce955c922eb4919544cb7a,BPMN (Business Process Model and Notation).,UML (Unified Modeling Language).,ERD (Entity-Relationship Diagram).,DFD (Data Flow Diagram).,Modelagem de Software,Qual é o padrão de notação gráfica mais comum atualmente para modelagem de sistemas?,UML (Unified Modeling Language).,
66ce955c922eb4919544cb7b,Engenharia de requisitos.,Design.,Implementação.,Manutenção.,Modelagem de Software,Durante qual processo os modelos são usados para descrever o sistema para os engenheiros que o implementam?,Design.,
66ce955c922eb4919544cb7c,Todos os detalhes do sistema.,Os pontos fracos do sistema.,Os pontos fortes do sistema.,Os detalhes do sistema.,Modelagem de Software,O que é essencialmente deixado de fora em um modelo de sistema?,Todos os detalhes do sistema.,
66ce955c922eb4919544cb7d,Limitar a compreensão do sistema.,Criar modelos redundantes.,Desenvolver modelos específicos para diferentes stakeholders.,Evitar a documentação do sistema.,Modelagem de Software,Qual é o propósito das perspectivas diferentes na modelagem de sistemas?,Desenvolver modelos específicos para diferentes stakeholders.,
66ce955c922eb4919544cb7e,Documentar o sistema de forma incompleta.,Desenvolver uma única perspectiva do sistema.,Facilitar a discussão sobre o sistema existente.,Documentar a arquitetura do sistema por perspectivas diferentes.,Modelagem de Software,Qual é o principal benefício da abordagem 4 + 1 proposta por Kruchten?,Documentar a arquitetura do sistema por perspectivas diferentes.,
66ce955c922eb4919544cb7f,"Diagramas de atividades, de casos de uso, de sequência, de classe e de estado.","Diagramas de fluxo, de casos de teste, de estrutura, de comunicação e de implementação.","Diagramas de entidade, de atributos, de relacionamento, de herança e de normalização.","Diagramas de processo, de interação, de integração, de fluxo de dados e de contexto.",Modelagem de Software,Quais são os cinco tipos de diagramas UML que representam a essência de um sistema?,"Diagramas de atividades, de casos de uso, de sequência, de classe e de estado.",
66ce955c922eb4919544cb80,Para evitar a discussão sobre um sistema existente.,Para documentar um sistema de forma incompleta.,Para estimular a discussão sobre um sistema existente ou proposto.,Para gerar automaticamente o código-fonte do sistema.,Modelagem de Software,Como os modelos gráficos são comumente usados?,Para estimular a discussão sobre um sistema existente ou proposto.,
66ce955c922eb4919544cb81,Para economizar tempo.,Para evitar a implementação do sistema.,Para servir como base para gerar o código-fonte do sistema.,Para ignorar símbolos semelhantes.,Modelagem de Software,Qual é a razão pela qual os modelos de sistema usados como parte de um processo de desenvolvimento dirigido a modelos precisam ser completos e corretos?,Para servir como base para gerar o código-fonte do sistema.,
66ce955c922eb4919544cb82,O custo do sistema.,A localização do sistema.,A funcionalidade a ser incluída no sistema.,A cor dos sistemas.,Modelagem de Software,O que é decidido durante a especificação de um sistema em relação aos limites do sistema?,A funcionalidade a ser incluída no sistema.,
66ce955c922eb4919544cb83,Fatores puramente técnicos.,Interesses sociais e organizacionais.,Limitações financeiras.,Restrições de tempo.,Modelagem de Software,Quais fatores podem determinar a posição de limite do sistema?,Interesses sociais e organizacionais.,
66ce955c922eb4919544cb84,Os detalhes de relacionamentos entre sistemas.,Os tipos de relacionamentos entre sistemas.,As interações entre os componentes do sistema.,Os sistemas automatizados no ambiente.,Modelagem de Software,O que os modelos de contexto simples mostram?,Os sistemas automatizados no ambiente.,
66ce955c922eb4919544cb85,Identificar os requisitos do usuário.,Ignorar os problemas de comunicação.,Aumentar a complexidade do sistema.,Reduzir a confiança no sistema.,Modelagem de Software,Qual é o principal objetivo da modelagem da interação do usuário?,Identificar os requisitos do usuário.,
66ce955c922eb4919544cb86,Mostrar as atividades envolvidas em um processo.,Descrever a organização do sistema.,Modelar interações entre os componentes do sistema.,Representar classes de objeto no sistema.,Modelagem de Software,Qual é o objetivo dos diagramas de sequência na modelagem de sistemas?,Modelar interações entre os componentes do sistema.,
66ce955c922eb4919544cb87,Por círculos preenchidos.,Por retângulos com cantos arredondados.,Por setas.,Por barras sólidas.,Modelagem de Software,Como são representadas as atividades em um diagrama de atividades da UML?,Por retângulos com cantos arredondados.,
66ce95bb922eb4919544cb88,Descrever a estrutura estática de um sistema,Representar a organização de um sistema em execução,Apoiar a elicitação de requisitos,Mostrar a interação entre atores e objetos em um sistema,Modelagem de Software,Qual é o objetivo principal da modelagem de caso de uso?,Apoiar a elicitação de requisitos,
66ce95bb922eb4919544cb89,Como uma elipse ou circulo,Como um retângulo,Como uma seta,Como um triângulo,Modelagem de Software,Como é representado um caso de uso em sua forma mais simples?,Como uma elipse ou circulo,
66ce95bb922eb4919544cb8a,Para indicar a direção do fluxo de mensagens,Porque as mensagens seguem em ambas as direções,Porque as setas são usadas informalmente para indicar a direção do fluxo,Porque as setas são desnecessárias em um caso de uso,Modelagem de Software,Por que as linhas em um diagrama de caso de uso não possuem setas?,Porque as mensagens seguem em ambas as direções,
66ce95bb922eb4919544cb8b,Descrição textual,Diagrama de classe,Diagrama de sequência,Descrição tabular,Modelagem de Software,Qual é o formato mais útil para descrever um caso de uso?,Descrição tabular,
66ce95bb922eb4919544cb8c,As associações entre classes,Todas as possíveis interações de um sistema,Os métodos de uma classe,Os componentes de um sistema em execução,Modelagem de Software,O que os diagramas compostos de casos de uso mostram?,Todas as possíveis interações de um sistema,
66ce95bb922eb4919544cb8d,Para modelar a estrutura estática das classes de objeto,Para mostrar a organização de um sistema em execução,Para modelar as interações entre atores e objetos em um sistema,Para representar os atributos de uma classe,Modelagem de Software,Para que os diagramas de sequência em UML são usados principalmente?,Para modelar as interações entre atores e objetos em um sistema,
66ce95bb922eb4919544cb8e,Por retângulos,Por setas anotadas,Por elipses,Por linhas tracejadas,Modelagem de Software,Como são indicadas as interações entre objetos em um diagrama de sequência?,Por setas anotadas,
66ce95bb922eb4919544cb8f,O tempo em que o objeto está envolvido no processamento,O tempo total de execução do caso de uso,O número de interações entre objetos,O número de mensagens trocadas entre atores,Modelagem de Software,O que representa a linha da vida em um diagrama de sequência?,O tempo em que o objeto está envolvido no processamento,
66ce95bb922eb4919544cb90,Em retângulos,Em elipses,Em setas,Em caixas,Modelagem de Software,Como são mostrados os atributos e operações de uma classe em um diagrama de classe?,Em retângulos,
66ce95bb922eb4919544cb91,Indica que há um relacionamento 1:1 entre objetos dessas classes,Indica que há um relacionamento 1:*,Indica que não há associação entre as classes,Indica que há um número indefinido de objetos envolvidos na associação,Modelagem de Software,O que representa o número 1 em uma associação entre classes?,Indica que há um relacionamento 1:1 entre objetos dessas classes,
66ce95bb922eb4919544cb92,Modelos que mostram a organização do sistema quando ele está em execução,Modelos que exibem a organização de um sistema em termos de seus componentes e relacionamentos,Modelos que mostram as interações entre atores e objetos em um sistema,Modelos que descrevem a estrutura estática de um sistema,Modelagem de Software,O que são modelos estruturais de software?,Modelos que exibem a organização de um sistema em termos de seus componentes e relacionamentos,
66ce95bb922eb4919544cb93,Atributos e operações,Atores e objetos,Mensagens e interações,Linhas de vida e setas anotadas,Modelagem de Software,Quais são os principais elementos representados em um diagrama de classe?,Atributos e operações,
66ce95bb922eb4919544cb94,Mostrar a organização do sistema quando ele está em execução,Representar as interações entre atores e objetos em um sistema,Modelar as interações entre os próprios objetos,Mostrar as classes de um sistema e as associações entre essas classes,Modelagem de Software,Qual é o objetivo principal dos diagramas de classe?,Mostrar as classes de um sistema e as associações entre essas classes,
66ce95bb922eb4919544cb95,Como retângulos,Como elipses,Como setas,Como caixas,Modelagem de Software,Como os objetos são representados em um diagrama de classe?,Como retângulos,
66ce95bb922eb4919544cb96,Reduzir a complexidade do sistema,Aumentar a complexidade do sistema,Adicionar mais detalhes às classes,Excluir informações comuns do sistema,Modelagem de Software,Qual é o propósito da generalização na modelagem de sistemas?,Reduzir a complexidade do sistema,
66ce95bb922eb4919544cb97,Usando associações,Usando mecanismos de herança de classe,Usando diagramas de atividades,Usando agregação de classes,Modelagem de Software,Como a generalização é implementada em linguagens orientadas a objetos como Java?,Usando mecanismos de herança de classe,
66ce95bb922eb4919544cb98,Agregação,Associação binária,Associação de composição,Associação de generalização,Modelagem de Software,Qual é o tipo específico de associação usado na UML para denotar a generalização?,Associação de generalização,
66ce95bb922eb4919544cb99,Agregação,Generalização,Associação,Composição,Modelagem de Software,O que significa quando um objeto é composto de outros objetos na UML?,Composição,
66ce95bb922eb4919544cb9a,Mostrar a estrutura estática do sistema,Mostrar o comportamento dinâmico do sistema,Documentar os requisitos do sistema,Descrever a implementação do sistema,Modelagem de Software,Qual é o objetivo dos modelos comportamentais em sistemas?,Mostrar o comportamento dinâmico do sistema,
66ce95bb922eb4919544cb9b,Dados e eventos,Somente eventos,Somente dados,Nenhum estímulo,Modelagem de Software,Que tipos de estímulos podem causar uma transição de estado em um sistema?,Dados e eventos,
66ce960d922eb4919544cb9c,Retângulos arredondados,Círculos preenchidos,Losangos,Setas,Modelagem de Software,Como são representados os estados do sistema nos diagramas de estado da UML?,Retângulos arredondados,
66ce960d922eb4919544cb9d,Gerar programas diretamente a partir de modelos,Ignorar completamente a fase de modelagem,Aumentar a complexidade da engenharia de software,Reduzir a abstração na engenharia de software,Modelagem de Software,Qual é o objetivo da engenharia dirigida a modelos?,Gerar programas diretamente a partir de modelos,
66ce960d922eb4919544cb9e,"O modelo de domínio inclui os principais interesses do sistema, enquanto o modelo de classe define as classes e suas características.","Não há diferença, ambos representam a estrutura do sistema.","O modelo de domínio define as classes, enquanto o modelo de classe identifica os interesses do sistema.","O modelo de domínio inclui restrições de objetos, enquanto o modelo de classe define as operações do sistema.",Modelagem de Software,Qual é a diferença entre um modelo de domínio e um modelo de classe na abordagem MDA?,"O modelo de domínio inclui os principais interesses do sistema, enquanto o modelo de classe define as classes e suas características.",
66ce960d922eb4919544cb9f,Por meio de tradutores automáticos,"Manualment, sem intervenção de ferramentas",Por meio de diagramas de sequência,Usando a linguagem de restrição de objetos (OCL),Modelagem de Software,Como são transformados os modelos independentes de plataforma em modelos específicos de plataforma?,Por meio de tradutores automáticos,
66ce960d922eb4919544cba0,Diagramas de classe,Diagramas de atividades,Linguagem de restrição de objetos (OCL),Diagramas de componentes,Modelagem de Software,O que pode ser usado para especificar o comportamento dinâmico do sistema na UML executável?,Diagramas de atividades,
66ce960d922eb4919544cba1,A falta de abstração na engenharia de software,A impossibilidade de gerar programas diretamente de modelos,A complexidade da abordagem,A incompatibilidade com métodos ágeis,Modelagem de Software,Qual é a principal crítica à engenharia dirigida a modelos?,A incompatibilidade com métodos ágeis,
66ce960d922eb4919544cba2,Por meio de diagramas de classe,Por meio de diagramas de sequência,Por meio de modelos de estado,Por meio de modelos da UML que mostram a estrutura estática e o comportamento do sistema,Modelagem de Software,Como os modelos independentes de plataforma são descritos na MDA?,Por meio de modelos da UML que mostram a estrutura estática e o comportamento do sistema,
66ce960d922eb4919544cba3,"A MDE se concentra em todos os aspectos do processo de engenharia de software, enquanto a MDA se concentra apenas nos estágios de projeto e implementação.","A MDE se preocupa com a documentação do sistema, enquanto a MDA se preocupa com a implementação do sistema.",A MDE é uma abordagem mais antiga que a MDA.,A MDE é uma abordagem mais recente que a MDA.,Modelagem de Software,Qual é a principal diferença entre a MDE e a MDA?,"A MDE se concentra em todos os aspectos do processo de engenharia de software, enquanto a MDA se concentra apenas nos estágios de projeto e implementação.",
66ce960d922eb4919544cba4,Aumento da complexidade do desenvolvimento de software,Maior flexibilidade na adaptação a diferentes plataformas,Redução da necessidade de modelagem,Limitação na representação de sistemas complexos,Modelagem de Software,Qual é a principal vantagem da abordagem MDA (Model Driven Architecture)?,Maior flexibilidade na adaptação a diferentes plataformas,
66ce960d922eb4919544cba5,Um diagrama que mostra a estrutura estática de um sistema,Um diagrama que representa o comportamento dinâmico de um sistema,Um diagrama usado apenas para documentar os requisitos do sistema,Um diagrama que descreve a interação entre diferentes componentes do sistema,Modelagem de Software,O que é um diagrama de atividades na UML?,Um diagrama que representa o comportamento dinâmico de um sistema,
66ce960d922eb4919544cba6,Representar o comportamento dinâmico do sistema,Definir a estrutura estática do sistema,Descrever os requisitos do sistema,Especificar detalhes de implementação para uma plataforma específica,Modelagem de Software,"Na engenharia dirigida a modelos, qual é o objetivo dos modelos específicos de plataforma?",Especificar detalhes de implementação para uma plataforma específica,
66ce960d922eb4919544cba7,Um modelo que especifica detalhes de implementação para uma plataforma específica,Um modelo que representa a estrutura estática do sistema,Um modelo que é independente de detalhes específicos de plataforma,Um modelo que descreve os requisitos do sistema,Modelagem de Software,O que é um modelo independente de plataforma (PIM) na MDA?,Um modelo que é independente de detalhes específicos de plataforma,
66ce960d922eb4919544cba8,"Um modelo de domínio descreve os principais conceitos do sistema, enquanto um modelo de caso de uso descreve as interações do sistema com os usuários.","Ambos os modelos descrevem os mesmos conceitos de sistema, mas de perspectivas diferentes.","Um modelo de domínio descreve as operações do sistema, enquanto um modelo de caso de uso identifica os principais interesses do sistema.",Não há diferença entre os dois modelos.,Modelagem de Software,Qual é a principal diferença entre um modelo de domínio e um modelo de caso de uso?,"Um modelo de domínio descreve os principais conceitos do sistema, enquanto um modelo de caso de uso descreve as interações do sistema com os usuários.",
66ce960d922eb4919544cba9,Uma abordagem que se concentra apenas na documentação de sistemas existentes,Uma abordagem que usa modelos em todos os estágios do processo de engenharia de software,Uma abordagem que ignora completamente a modelagem,Uma abordagem que se concentra exclusivamente na implementação de sistemas,Modelagem de Software,O que é a abordagem MDE (Model-Driven Engineering)?,Uma abordagem que usa modelos em todos os estágios do processo de engenharia de software,
